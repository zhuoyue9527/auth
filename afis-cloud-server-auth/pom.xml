<project xmlns="http://maven.apache.org/POM/4.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>


	<parent>
		<groupId>com.afis.cloud</groupId>
		<artifactId>afis-cloud-base</artifactId>
		<version>0.0.1-SNAPSHOT</version>
	</parent>

	<artifactId>afis-cloud-server-auth</artifactId>
	<packaging>jar</packaging>

	<name>afis-cloud-server-auth</name>
	<url>http://maven.apache.org</url>

	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
	</properties>

	<dependencies>
		<dependency>
			<groupId>com.afis.cloud</groupId>
			<artifactId>afis-cloud-core</artifactId>
			<version>0.0.1-SNAPSHOT</version>
		</dependency>
		
		<dependency>
			<groupId>com.afis.cloud</groupId>
			<artifactId>afis-cloud-exception</artifactId>
			<version>0.0.1-SNAPSHOT</version>
		</dependency>
		
		<dependency>
			<groupId>com.afis.cloud</groupId>
			<artifactId>afis-cloud-cache</artifactId>
			<version>0.0.1-SNAPSHOT</version>
		</dependency>

		<dependency>
			<groupId>com.afis.cloud</groupId>
			<artifactId>afis-cloud-entities-auth</artifactId>
			<version>0.0.1-SNAPSHOT</version>
		</dependency>

		

		<dependency>
			<groupId>com.oracle</groupId>
			<artifactId>ojdbc6</artifactId>
			<version>11.2.0.3</version>
		</dependency>

		<dependency>
			<groupId>org.springframework.kafka</groupId>
			<artifactId>spring-kafka</artifactId>
		</dependency>
		
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-json</artifactId>
		</dependency>
	</dependencies>

	<build>
		<resources>
			<resource>
				<directory>src/main/resources</directory>
				<includes>
					<include>*.*</include>
					<include>*/*/*.*</include>
				</includes>
			</resource>
		</resources>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>3.6.1</version>
				<configuration>
					<compilerArguments>
						<source>1.8</source>
						<target>1.8</target>
						<encoding>UTF-8</encoding>
					</compilerArguments>
				</configuration>
			</plugin>

			<!-- 拷贝依赖到lib_temp目录下 -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-dependency-plugin</artifactId>
				<executions>
					<execution>
						<id>copy</id>
						<phase>install</phase>
						<goals>
							<goal>copy-dependencies</goal>
						</goals>
						<configuration>
							<outputDirectory>${project.build.directory}/release/lib_temp</outputDirectory>
							<excludeClassifiers>sources</excludeClassifiers>
							<overWriteIfNewer>true</overWriteIfNewer>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-antrun-plugin</artifactId>
				<version>1.2</version>
				<executions>
					<execution>
						<id>release</id>
						<phase>install</phase>
						<goals>
							<goal>run</goal>
						</goals>
						<configuration>
							<tasks>
								<delete
									dir="${project.build.directory}/${project.name}/config"></delete>
								<delete
									dir="${project.build.directory}/${project.name}/lib"></delete>
								<delete
									dir="${project.build.directory}/${project.name}/bin"></delete>
								<delete
									dir="${project.build.directory}/${project.name}/data"></delete>
								<delete
									dir="${project.build.directory}/${project.name}/logs"></delete>
								<mkdir
									dir="${project.build.directory}/${project.name}/config"></mkdir>
								<mkdir
									dir="${project.build.directory}/${project.name}/lib"></mkdir>
								<mkdir
									dir="${project.build.directory}/${project.name}/bin"></mkdir>
								<mkdir
									dir="${project.build.directory}/${project.name}/data"></mkdir>
								<mkdir
									dir="${project.build.directory}/${project.name}/logs"></mkdir>
								<copy
									todir="${project.build.directory}/${project.name}/config">
									<fileset dir="${basedir}/src/main/resources" />
								</copy>
								<copy
									todir="${project.build.directory}/${project.name}/bin">
									<fileset dir="${basedir}/bin" />
								</copy>
								<copy
									todir="${project.build.directory}/${project.name}/lib">
									<fileset dir="${basedir}/target">
										<exclude name="*-sources.jar"></exclude>
										<exclude name="*-javadoc.jar"></exclude>
										<include name="*.jar"></include>
									</fileset>
								</copy>
								<copy
									todir="${project.build.directory}/${project.name}/lib">
									<fileset
										dir="${project.build.directory}/release/lib_temp">
										<exclude name="*-sources.jar"></exclude>
									</fileset>
								</copy>
								<delete dir="${project.build.directory}/release/lib_temp"></delete>
							</tasks>
						</configuration>
					</execution>
				</executions>
			</plugin>
		</plugins>
	</build>
</project>
