package com.afis.cloud.entities.model.auth;

import java.lang.reflect.Array;
import java.util.ArrayList;
import java.util.Date;
import java.util.HashMap;
import java.util.Iterator;
import java.util.LinkedHashMap;
import java.util.List;
import java.util.Map;
import java.util.Map.Entry;

public class UserExample {
    /**
     * This field was generated by www.sacool.com iBATIS builder.
     * <br>This field corresponds to the database table T_A_USER
     *
     * @sacoolbuildergenerated 2018-10-31 11:01:44
     * @author sacool ibatis builder Team
     */
    private LinkedHashMap<String, String> orderByClauseMap;

    /**
     * This field was generated by www.sacool.com iBATIS builder.
     * <br>This field corresponds to the database table T_A_USER
     *
     * @sacoolbuildergenerated 2018-10-31 11:01:44
     * @author sacool ibatis builder Team
     */
    private String orderByClause;

    /**
     * This field was generated by www.sacool.com iBATIS builder.
     * <br>This field corresponds to the database table T_A_USER
     *
     * @sacoolbuildergenerated 2018-10-31 11:01:44
     * @author sacool ibatis builder Team
     */
    protected String alias;

    /**
     * This field was generated by www.sacool.com iBATIS builder.
     * <br>This field corresponds to the database table T_A_USER
     *
     * @sacoolbuildergenerated 2018-10-31 11:01:44
     * @author sacool ibatis builder Team
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by www.sacool.com iBATIS builder.
     * <br>This method corresponds to the database table T_A_USER
     *
     * @sacoolbuildergenerated 2018-10-31 11:01:44
     * @author sacool ibatis builder Team
     */
    public UserExample() {
        oredCriteria = new ArrayList<Criteria>();
        orderByClauseMap = new LinkedHashMap<String, String>();
    }

    /**
     * This method was generated by www.sacool.com iBATIS builder.
     * <br>This method corresponds to the database table T_A_USER
     * @param alias The dynamic alias of the table.
     *
     * @sacoolbuildergenerated 2018-10-31 11:01:44
     * @author sacool ibatis builder Team
     */
    public UserExample(String alias) {
        this();
        this.alias = alias;
    }

    /**
     * This method was generated by www.sacool.com iBATIS builder.
     * <br>This method corresponds to the database table T_A_USER
     * @param example Another example will be copied to this.
     *
     * @sacoolbuildergenerated 2018-10-31 11:01:44
     * @author sacool ibatis builder Team
     */
    protected UserExample(UserExample example) {
        this.orderByClauseMap = new LinkedHashMap<String, String>(example.orderByClauseMap);
        this.oredCriteria = example.oredCriteria;
    }

    /**
     * This method was generated by www.sacool.com iBATIS builder.
     * <br>This method corresponds to the database table T_A_USER
     * @param example Another example will be copied to this.
     * @param alias The dynamic alias of the table.
     *
     * @sacoolbuildergenerated 2018-10-31 11:01:44
     * @author sacool ibatis builder Team
     */
    protected UserExample(UserExample example, String alias) {
        this(example);
        this.alias = alias;
    }

    /**
     * This method was generated by www.sacool.com iBATIS builder.
     * <br>This method corresponds to the database table T_A_USER
     *
     * @sacoolbuildergenerated 2018-10-31 11:01:44
     * @author sacool ibatis builder Team
     */
    public UserExample orderById(String direction) {
        return this.orderBy("ID", direction);
    }

    /**
     * This method was generated by www.sacool.com iBATIS builder.
     * <br>This method corresponds to the database table T_A_USER
     *
     * @sacoolbuildergenerated 2018-10-31 11:01:44
     * @author sacool ibatis builder Team
     */
    public String removeOrderById() {
        return this.removeOrderBy("ID");
    }

    /**
     * This method was generated by www.sacool.com iBATIS builder.
     * <br>This method corresponds to the database table T_A_USER
     *
     * @sacoolbuildergenerated 2018-10-31 11:01:44
     * @author sacool ibatis builder Team
     */
    public UserExample orderByUserAccount(String direction) {
        return this.orderBy("USER_ACCOUNT", direction);
    }

    /**
     * This method was generated by www.sacool.com iBATIS builder.
     * <br>This method corresponds to the database table T_A_USER
     *
     * @sacoolbuildergenerated 2018-10-31 11:01:44
     * @author sacool ibatis builder Team
     */
    public String removeOrderByUserAccount() {
        return this.removeOrderBy("USER_ACCOUNT");
    }

    /**
     * This method was generated by www.sacool.com iBATIS builder.
     * <br>This method corresponds to the database table T_A_USER
     *
     * @sacoolbuildergenerated 2018-10-31 11:01:44
     * @author sacool ibatis builder Team
     */
    public UserExample orderByUserName(String direction) {
        return this.orderBy("USER_NAME", direction);
    }

    /**
     * This method was generated by www.sacool.com iBATIS builder.
     * <br>This method corresponds to the database table T_A_USER
     *
     * @sacoolbuildergenerated 2018-10-31 11:01:44
     * @author sacool ibatis builder Team
     */
    public String removeOrderByUserName() {
        return this.removeOrderBy("USER_NAME");
    }

    /**
     * This method was generated by www.sacool.com iBATIS builder.
     * <br>This method corresponds to the database table T_A_USER
     *
     * @sacoolbuildergenerated 2018-10-31 11:01:44
     * @author sacool ibatis builder Team
     */
    public UserExample orderByPassword(String direction) {
        return this.orderBy("PASSWORD", direction);
    }

    /**
     * This method was generated by www.sacool.com iBATIS builder.
     * <br>This method corresponds to the database table T_A_USER
     *
     * @sacoolbuildergenerated 2018-10-31 11:01:44
     * @author sacool ibatis builder Team
     */
    public String removeOrderByPassword() {
        return this.removeOrderBy("PASSWORD");
    }

    /**
     * This method was generated by www.sacool.com iBATIS builder.
     * <br>This method corresponds to the database table T_A_USER
     *
     * @sacoolbuildergenerated 2018-10-31 11:01:44
     * @author sacool ibatis builder Team
     */
    public UserExample orderByMobile(String direction) {
        return this.orderBy("MOBILE", direction);
    }

    /**
     * This method was generated by www.sacool.com iBATIS builder.
     * <br>This method corresponds to the database table T_A_USER
     *
     * @sacoolbuildergenerated 2018-10-31 11:01:44
     * @author sacool ibatis builder Team
     */
    public String removeOrderByMobile() {
        return this.removeOrderBy("MOBILE");
    }

    /**
     * This method was generated by www.sacool.com iBATIS builder.
     * <br>This method corresponds to the database table T_A_USER
     *
     * @sacoolbuildergenerated 2018-10-31 11:01:44
     * @author sacool ibatis builder Team
     */
    public UserExample orderByClientType(String direction) {
        return this.orderBy("CLIENT_TYPE", direction);
    }

    /**
     * This method was generated by www.sacool.com iBATIS builder.
     * <br>This method corresponds to the database table T_A_USER
     *
     * @sacoolbuildergenerated 2018-10-31 11:01:44
     * @author sacool ibatis builder Team
     */
    public String removeOrderByClientType() {
        return this.removeOrderBy("CLIENT_TYPE");
    }

    /**
     * This method was generated by www.sacool.com iBATIS builder.
     * <br>This method corresponds to the database table T_A_USER
     *
     * @sacoolbuildergenerated 2018-10-31 11:01:44
     * @author sacool ibatis builder Team
     */
    public UserExample orderByStatus(String direction) {
        return this.orderBy("STATUS", direction);
    }

    /**
     * This method was generated by www.sacool.com iBATIS builder.
     * <br>This method corresponds to the database table T_A_USER
     *
     * @sacoolbuildergenerated 2018-10-31 11:01:44
     * @author sacool ibatis builder Team
     */
    public String removeOrderByStatus() {
        return this.removeOrderBy("STATUS");
    }

    /**
     * This method was generated by www.sacool.com iBATIS builder.
     * <br>This method corresponds to the database table T_A_USER
     *
     * @sacoolbuildergenerated 2018-10-31 11:01:44
     * @author sacool ibatis builder Team
     */
    public UserExample orderByRemark(String direction) {
        return this.orderBy("REMARK", direction);
    }

    /**
     * This method was generated by www.sacool.com iBATIS builder.
     * <br>This method corresponds to the database table T_A_USER
     *
     * @sacoolbuildergenerated 2018-10-31 11:01:44
     * @author sacool ibatis builder Team
     */
    public String removeOrderByRemark() {
        return this.removeOrderBy("REMARK");
    }

    /**
     * This method was generated by www.sacool.com iBATIS builder.
     * <br>This method corresponds to the database table T_A_USER
     *
     * @sacoolbuildergenerated 2018-10-31 11:01:44
     * @author sacool ibatis builder Team
     */
    public UserExample orderByRegisterAppId(String direction) {
        return this.orderBy("REGISTER_APP_ID", direction);
    }

    /**
     * This method was generated by www.sacool.com iBATIS builder.
     * <br>This method corresponds to the database table T_A_USER
     *
     * @sacoolbuildergenerated 2018-10-31 11:01:44
     * @author sacool ibatis builder Team
     */
    public String removeOrderByRegisterAppId() {
        return this.removeOrderBy("REGISTER_APP_ID");
    }

    /**
     * This method was generated by www.sacool.com iBATIS builder.
     * <br>This method corresponds to the database table T_A_USER
     *
     * @sacoolbuildergenerated 2018-10-31 11:01:44
     * @author sacool ibatis builder Team
     */
    public UserExample orderByRegisterOperator(String direction) {
        return this.orderBy("REGISTER_OPERATOR", direction);
    }

    /**
     * This method was generated by www.sacool.com iBATIS builder.
     * <br>This method corresponds to the database table T_A_USER
     *
     * @sacoolbuildergenerated 2018-10-31 11:01:44
     * @author sacool ibatis builder Team
     */
    public String removeOrderByRegisterOperator() {
        return this.removeOrderBy("REGISTER_OPERATOR");
    }

    /**
     * This method was generated by www.sacool.com iBATIS builder.
     * <br>This method corresponds to the database table T_A_USER
     *
     * @sacoolbuildergenerated 2018-10-31 11:01:44
     * @author sacool ibatis builder Team
     */
    public UserExample orderByRegisterTime(String direction) {
        return this.orderBy("REGISTER_TIME", direction);
    }

    /**
     * This method was generated by www.sacool.com iBATIS builder.
     * <br>This method corresponds to the database table T_A_USER
     *
     * @sacoolbuildergenerated 2018-10-31 11:01:44
     * @author sacool ibatis builder Team
     */
    public String removeOrderByRegisterTime() {
        return this.removeOrderBy("REGISTER_TIME");
    }

    /**
     * This method was generated by www.sacool.com iBATIS builder.
     * <br>This method corresponds to the database table T_A_USER
     *
     * @sacoolbuildergenerated 2018-10-31 11:01:44
     * @author sacool ibatis builder Team
     */
    public UserExample orderByOperateAppId(String direction) {
        return this.orderBy("OPERATE_APP_ID", direction);
    }

    /**
     * This method was generated by www.sacool.com iBATIS builder.
     * <br>This method corresponds to the database table T_A_USER
     *
     * @sacoolbuildergenerated 2018-10-31 11:01:44
     * @author sacool ibatis builder Team
     */
    public String removeOrderByOperateAppId() {
        return this.removeOrderBy("OPERATE_APP_ID");
    }

    /**
     * This method was generated by www.sacool.com iBATIS builder.
     * <br>This method corresponds to the database table T_A_USER
     *
     * @sacoolbuildergenerated 2018-10-31 11:01:44
     * @author sacool ibatis builder Team
     */
    public UserExample orderByOperator(String direction) {
        return this.orderBy("OPERATOR", direction);
    }

    /**
     * This method was generated by www.sacool.com iBATIS builder.
     * <br>This method corresponds to the database table T_A_USER
     *
     * @sacoolbuildergenerated 2018-10-31 11:01:44
     * @author sacool ibatis builder Team
     */
    public String removeOrderByOperator() {
        return this.removeOrderBy("OPERATOR");
    }

    /**
     * This method was generated by www.sacool.com iBATIS builder.
     * <br>This method corresponds to the database table T_A_USER
     *
     * @sacoolbuildergenerated 2018-10-31 11:01:44
     * @author sacool ibatis builder Team
     */
    public UserExample orderByOperateTime(String direction) {
        return this.orderBy("OPERATE_TIME", direction);
    }

    /**
     * This method was generated by www.sacool.com iBATIS builder.
     * <br>This method corresponds to the database table T_A_USER
     *
     * @sacoolbuildergenerated 2018-10-31 11:01:44
     * @author sacool ibatis builder Team
     */
    public String removeOrderByOperateTime() {
        return this.removeOrderBy("OPERATE_TIME");
    }

    /**
     * This method was generated by www.sacool.com iBATIS builder.
     * <br>This method corresponds to the database table T_A_USER
     *
     * @sacoolbuildergenerated 2018-10-31 11:01:44
     * @author sacool ibatis builder Team
     */
    public UserExample orderByLastLoginTime(String direction) {
        return this.orderBy("LAST_LOGIN_TIME", direction);
    }

    /**
     * This method was generated by www.sacool.com iBATIS builder.
     * <br>This method corresponds to the database table T_A_USER
     *
     * @sacoolbuildergenerated 2018-10-31 11:01:44
     * @author sacool ibatis builder Team
     */
    public String removeOrderByLastLoginTime() {
        return this.removeOrderBy("LAST_LOGIN_TIME");
    }

    /**
     * This method was generated by www.sacool.com iBATIS builder.
     * <br>This method corresponds to the database table T_A_USER
     *
     * @sacoolbuildergenerated 2018-10-31 11:01:44
     * @author sacool ibatis builder Team
     */
    public UserExample orderByLastLoginIp(String direction) {
        return this.orderBy("LAST_LOGIN_IP", direction);
    }

    /**
     * This method was generated by www.sacool.com iBATIS builder.
     * <br>This method corresponds to the database table T_A_USER
     *
     * @sacoolbuildergenerated 2018-10-31 11:01:44
     * @author sacool ibatis builder Team
     */
    public String removeOrderByLastLoginIp() {
        return this.removeOrderBy("LAST_LOGIN_IP");
    }

    /**
     * This method was generated by www.sacool.com iBATIS builder.
     * <br>This method corresponds to the database table T_A_USER
     *
     * @sacoolbuildergenerated 2018-10-31 11:01:44
     * @author sacool ibatis builder Team
     */
    public UserExample orderBy(String field, String direction) {
        boolean have = orderByClauseMap.containsKey(field);
        String old = orderByClauseMap.put(field, direction);
        if(have && (old == null ? direction != null : !old.equals(direction))) orderByClause = null;
        return this;
    }

    /**
     * This method was generated by www.sacool.com iBATIS builder.
     * <br>This method corresponds to the database table T_A_USER
     *
     * @sacoolbuildergenerated 2018-10-31 11:01:44
     * @author sacool ibatis builder Team
     */
    public String removeOrderBy(String field) {
        if(orderByClauseMap.containsKey(field)){
            orderByClause = null;
            return orderByClauseMap.remove(field);
        }
        return null;
    }

    /**
     * This method was generated by www.sacool.com iBATIS builder.
     * <br>This method corresponds to the database table T_A_USER
     *
     * @sacoolbuildergenerated 2018-10-31 11:01:44
     * @author sacool ibatis builder Team
     */
    public void clearOrderByClause() {
        if(!orderByClauseMap.isEmpty()){
            orderByClause = null;
            orderByClauseMap.clear();
        }
    }

    /**
     * This method was generated by www.sacool.com iBATIS builder.
     * <br>This method corresponds to the database table T_A_USER
     *
     * @sacoolbuildergenerated 2018-10-31 11:01:44
     * @author sacool ibatis builder Team
     */
    public String getOrderByClause() {
        if(orderByClause == null){
            StringBuilder sb = new StringBuilder();
            Iterator<Entry<String, String>> iterator = orderByClauseMap.entrySet().iterator();
            boolean aliasEmpty = this.alias == null || this.alias.isEmpty();
            while(iterator.hasNext()){
                Entry<String, String> entry = iterator.next();
                String key = entry.getKey();
                String value = entry.getValue();
                boolean keyEmpty = key == null || key.isEmpty();
                boolean valueEmpty = value == null || value.isEmpty();
                if(!keyEmpty){
                    if(!aliasEmpty){
                        sb.append(this.alias);
                        sb.append(".");
                    }
                    sb.append(entry.getKey());
                }
                if(!valueEmpty){
                    if(!keyEmpty) sb.append(" ");
                    sb.append(entry.getValue());
                }
                if(!keyEmpty || !valueEmpty) sb.append(", ");
            }
            if(sb.length() != 0) sb.setLength(sb.length() - 2);
            orderByClause = sb.toString();
        }
        return orderByClause;
    }

    /**
     * This method was generated by www.sacool.com iBATIS builder.
     * <br>This method corresponds to the database table T_A_USER
     * @param alias The dynamic alias of the table.
     *
     * @sacoolbuildergenerated 2018-10-31 11:01:44
     * @author sacool ibatis builder Team
     */
    public void setAlias(String alias) {
        this.alias = alias;
        orderByClause = null;
    }

    /**
     * This method was generated by www.sacool.com iBATIS builder.
     * <br>This method corresponds to the database table T_A_USER
     *
     * @sacoolbuildergenerated 2018-10-31 11:01:44
     * @author sacool ibatis builder Team
     */
    public String getAlias() {
        return alias;
    }

    /**
     * This method was generated by www.sacool.com iBATIS builder.
     * <br>This method corresponds to the database table T_A_USER
     *
     * @sacoolbuildergenerated 2018-10-31 11:01:44
     * @author sacool ibatis builder Team
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by www.sacool.com iBATIS builder.
     * <br>This method corresponds to the database table T_A_USER
     *
     * @sacoolbuildergenerated 2018-10-31 11:01:44
     * @author sacool ibatis builder Team
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by www.sacool.com iBATIS builder.
     * <br>This method corresponds to the database table T_A_USER
     *
     * @sacoolbuildergenerated 2018-10-31 11:01:44
     * @author sacool ibatis builder Team
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if(oredCriteria.size() == 0) oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by www.sacool.com iBATIS builder.
     * <br>This method corresponds to the database table T_A_USER
     *
     * @sacoolbuildergenerated 2018-10-31 11:01:44
     * @author sacool ibatis builder Team
     */
    protected Criteria createCriteriaInternal() {
        return new Criteria();
    }

    /**
     * This method was generated by www.sacool.com iBATIS builder.
     * <br>This method corresponds to the database table T_A_USER
     *
     * @sacoolbuildergenerated 2018-10-31 11:01:44
     * @author sacool ibatis builder Team
     */
    public void clearOredCriteria() {
        oredCriteria.clear();
    }

    /**
     * This class was generated by www.sacool.com iBATIS builder.
     * <br>This class corresponds to the database table T_A_USER
     *
     * @sacoolbuildergenerated 2018-10-31 11:01:44
     * @author sacool ibatis builder Team
     */
    public static class Criteria {
        protected List<String> criteriaWithSqlSnippetValue;

        protected List<String> criteriaWithoutValue;

        protected List<Map<String, Object>> criteriaWithSingleValue;

        protected List<Map<String, Object>> criteriaWithListValue;

        protected List<Map<String, Object>> criteriaWithBetweenValue;

        protected Criteria() {
            super();
            criteriaWithSqlSnippetValue = new ArrayList<String>();
            criteriaWithoutValue = new ArrayList<String>();
            criteriaWithSingleValue = new ArrayList<Map<String, Object>>();
            criteriaWithListValue = new ArrayList<Map<String, Object>>();
            criteriaWithBetweenValue = new ArrayList<Map<String, Object>>();
        }

        public boolean isValid() {
            return criteriaWithSqlSnippetValue.size() > 0
                || criteriaWithoutValue.size() > 0
                || criteriaWithSingleValue.size() > 0
                || criteriaWithListValue.size() > 0
                || criteriaWithBetweenValue.size() > 0;
        }

        public List<String> getCriteriaWithSqlSnippetValue() {
            return criteriaWithSqlSnippetValue;
        }

        public List<String> getCriteriaWithoutValue() {
            return criteriaWithoutValue;
        }

        public List<Map<String, Object>> getCriteriaWithSingleValue() {
            return criteriaWithSingleValue;
        }

        public List<Map<String, Object>> getCriteriaWithListValue() {
            return criteriaWithListValue;
        }

        public List<Map<String, Object>> getCriteriaWithBetweenValue() {
            return criteriaWithBetweenValue;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteriaWithoutValue.add(condition);
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            List<Map<String, Object>> list = null;
            String valueKey = "value";
            if(value.getClass().isArray()) {
                if(Array.getLength(value) == 0) throw new RuntimeException("Value array for " + property + " cannot be empty");
                list = criteriaWithListValue;
                valueKey = "values";
            } else list = criteriaWithSingleValue;
            Map<String, Object> map = new HashMap<String, Object>();
            map.put("condition", condition);
            map.put(valueKey, value);
            list.add(map);
        }

        protected void addCriterion(String condition, List<? extends Object> values, String property) {
            if (values == null || values.size() == 0) {
                throw new RuntimeException("Value list for " + property + " cannot be null or empty");
            }
            Map<String, Object> map = new HashMap<String, Object>();
            map.put("condition", condition);
            map.put("values", values);
            criteriaWithListValue.add(map);
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            List<Object> list = new ArrayList<Object>();
            list.add(value1);
            list.add(value2);
            Map<String, Object> map = new HashMap<String, Object>();
            map.put("condition", condition);
            map.put("values", list);
            criteriaWithBetweenValue.add(map);
        }

        public Criteria andSQLSnippet(String sqlSnippet) {
            if(sqlSnippet == null){
                throw new RuntimeException("Value for sqlSnippet cannot be null");
            }
            criteriaWithSqlSnippetValue.add(sqlSnippet);
            return this;
        }

        public Criteria andIdIsNull() {
            addCriterion("ID IS NULL");
            return this;
        }

        public Criteria andIdIsNotNull() {
            addCriterion("ID IS NOT NULL");
            return this;
        }

        public Criteria andIdEqualTo(long value) {
            addCriterion("ID =", new Long(value), "id");
            return this;
        }

        public Criteria andIdNotEqualTo(long value) {
            addCriterion("ID <>", new Long(value), "id");
            return this;
        }

        public Criteria andIdGreaterThan(long value) {
            addCriterion("ID >", new Long(value), "id");
            return this;
        }

        public Criteria andIdGreaterThanOrEqualTo(long value) {
            addCriterion("ID >=", new Long(value), "id");
            return this;
        }

        public Criteria andIdLessThan(long value) {
            addCriterion("ID <", new Long(value), "id");
            return this;
        }

        public Criteria andIdLessThanOrEqualTo(long value) {
            addCriterion("ID <=", new Long(value), "id");
            return this;
        }

        public Criteria andIdIn(long[] values) {
            addCriterion("ID IN", values, "id");
            return this;
        }

        public Criteria andIdIn(List<Long> values) {
            addCriterion("ID IN", values, "id");
            return this;
        }

        public Criteria andIdNotIn(long[] values) {
            addCriterion("ID NOT IN", values, "id");
            return this;
        }

        public Criteria andIdNotIn(List<Long> values) {
            addCriterion("ID NOT IN", values, "id");
            return this;
        }

        public Criteria andIdBetween(long value1, long value2) {
            addCriterion("ID BETWEEN", new Long(value1), new Long(value2), "id");
            return this;
        }

        public Criteria andIdNotBetween(long value1, long value2) {
            addCriterion("ID NOT BETWEEN", new Long(value1), new Long(value2), "id");
            return this;
        }

        public Criteria andUserAccountIsNull() {
            addCriterion("USER_ACCOUNT IS NULL");
            return this;
        }

        public Criteria andUserAccountIsNotNull() {
            addCriterion("USER_ACCOUNT IS NOT NULL");
            return this;
        }

        public Criteria andUserAccountEqualTo(String value) {
            addCriterion("USER_ACCOUNT =", value, "userAccount");
            return this;
        }

        public Criteria andUserAccountNotEqualTo(String value) {
            addCriterion("USER_ACCOUNT <>", value, "userAccount");
            return this;
        }

        public Criteria andUserAccountGreaterThan(String value) {
            addCriterion("USER_ACCOUNT >", value, "userAccount");
            return this;
        }

        public Criteria andUserAccountGreaterThanOrEqualTo(String value) {
            addCriterion("USER_ACCOUNT >=", value, "userAccount");
            return this;
        }

        public Criteria andUserAccountLessThan(String value) {
            addCriterion("USER_ACCOUNT <", value, "userAccount");
            return this;
        }

        public Criteria andUserAccountLessThanOrEqualTo(String value) {
            addCriterion("USER_ACCOUNT <=", value, "userAccount");
            return this;
        }

        public Criteria andUserAccountLike(String value) {
            addCriterion("USER_ACCOUNT LIKE", value, "userAccount");
            return this;
        }

        public Criteria andUserAccountNotLike(String value) {
            addCriterion("USER_ACCOUNT NOT LIKE", value, "userAccount");
            return this;
        }

        public Criteria andUserAccountIn(String[] values) {
            addCriterion("USER_ACCOUNT IN", values, "userAccount");
            return this;
        }

        public Criteria andUserAccountIn(List<String> values) {
            addCriterion("USER_ACCOUNT IN", values, "userAccount");
            return this;
        }

        public Criteria andUserAccountNotIn(String[] values) {
            addCriterion("USER_ACCOUNT NOT IN", values, "userAccount");
            return this;
        }

        public Criteria andUserAccountNotIn(List<String> values) {
            addCriterion("USER_ACCOUNT NOT IN", values, "userAccount");
            return this;
        }

        public Criteria andUserAccountBetween(String value1, String value2) {
            addCriterion("USER_ACCOUNT BETWEEN", value1, value2, "userAccount");
            return this;
        }

        public Criteria andUserAccountNotBetween(String value1, String value2) {
            addCriterion("USER_ACCOUNT NOT BETWEEN", value1, value2, "userAccount");
            return this;
        }

        public Criteria andUserNameIsNull() {
            addCriterion("USER_NAME IS NULL");
            return this;
        }

        public Criteria andUserNameIsNotNull() {
            addCriterion("USER_NAME IS NOT NULL");
            return this;
        }

        public Criteria andUserNameEqualTo(String value) {
            addCriterion("USER_NAME =", value, "userName");
            return this;
        }

        public Criteria andUserNameNotEqualTo(String value) {
            addCriterion("USER_NAME <>", value, "userName");
            return this;
        }

        public Criteria andUserNameGreaterThan(String value) {
            addCriterion("USER_NAME >", value, "userName");
            return this;
        }

        public Criteria andUserNameGreaterThanOrEqualTo(String value) {
            addCriterion("USER_NAME >=", value, "userName");
            return this;
        }

        public Criteria andUserNameLessThan(String value) {
            addCriterion("USER_NAME <", value, "userName");
            return this;
        }

        public Criteria andUserNameLessThanOrEqualTo(String value) {
            addCriterion("USER_NAME <=", value, "userName");
            return this;
        }

        public Criteria andUserNameLike(String value) {
            addCriterion("USER_NAME LIKE", value, "userName");
            return this;
        }

        public Criteria andUserNameNotLike(String value) {
            addCriterion("USER_NAME NOT LIKE", value, "userName");
            return this;
        }

        public Criteria andUserNameIn(String[] values) {
            addCriterion("USER_NAME IN", values, "userName");
            return this;
        }

        public Criteria andUserNameIn(List<String> values) {
            addCriterion("USER_NAME IN", values, "userName");
            return this;
        }

        public Criteria andUserNameNotIn(String[] values) {
            addCriterion("USER_NAME NOT IN", values, "userName");
            return this;
        }

        public Criteria andUserNameNotIn(List<String> values) {
            addCriterion("USER_NAME NOT IN", values, "userName");
            return this;
        }

        public Criteria andUserNameBetween(String value1, String value2) {
            addCriterion("USER_NAME BETWEEN", value1, value2, "userName");
            return this;
        }

        public Criteria andUserNameNotBetween(String value1, String value2) {
            addCriterion("USER_NAME NOT BETWEEN", value1, value2, "userName");
            return this;
        }

        public Criteria andPasswordIsNull() {
            addCriterion("PASSWORD IS NULL");
            return this;
        }

        public Criteria andPasswordIsNotNull() {
            addCriterion("PASSWORD IS NOT NULL");
            return this;
        }

        public Criteria andPasswordEqualTo(String value) {
            addCriterion("PASSWORD =", value, "password");
            return this;
        }

        public Criteria andPasswordNotEqualTo(String value) {
            addCriterion("PASSWORD <>", value, "password");
            return this;
        }

        public Criteria andPasswordGreaterThan(String value) {
            addCriterion("PASSWORD >", value, "password");
            return this;
        }

        public Criteria andPasswordGreaterThanOrEqualTo(String value) {
            addCriterion("PASSWORD >=", value, "password");
            return this;
        }

        public Criteria andPasswordLessThan(String value) {
            addCriterion("PASSWORD <", value, "password");
            return this;
        }

        public Criteria andPasswordLessThanOrEqualTo(String value) {
            addCriterion("PASSWORD <=", value, "password");
            return this;
        }

        public Criteria andPasswordLike(String value) {
            addCriterion("PASSWORD LIKE", value, "password");
            return this;
        }

        public Criteria andPasswordNotLike(String value) {
            addCriterion("PASSWORD NOT LIKE", value, "password");
            return this;
        }

        public Criteria andPasswordIn(String[] values) {
            addCriterion("PASSWORD IN", values, "password");
            return this;
        }

        public Criteria andPasswordIn(List<String> values) {
            addCriterion("PASSWORD IN", values, "password");
            return this;
        }

        public Criteria andPasswordNotIn(String[] values) {
            addCriterion("PASSWORD NOT IN", values, "password");
            return this;
        }

        public Criteria andPasswordNotIn(List<String> values) {
            addCriterion("PASSWORD NOT IN", values, "password");
            return this;
        }

        public Criteria andPasswordBetween(String value1, String value2) {
            addCriterion("PASSWORD BETWEEN", value1, value2, "password");
            return this;
        }

        public Criteria andPasswordNotBetween(String value1, String value2) {
            addCriterion("PASSWORD NOT BETWEEN", value1, value2, "password");
            return this;
        }

        public Criteria andMobileIsNull() {
            addCriterion("MOBILE IS NULL");
            return this;
        }

        public Criteria andMobileIsNotNull() {
            addCriterion("MOBILE IS NOT NULL");
            return this;
        }

        public Criteria andMobileEqualTo(String value) {
            addCriterion("MOBILE =", value, "mobile");
            return this;
        }

        public Criteria andMobileNotEqualTo(String value) {
            addCriterion("MOBILE <>", value, "mobile");
            return this;
        }

        public Criteria andMobileGreaterThan(String value) {
            addCriterion("MOBILE >", value, "mobile");
            return this;
        }

        public Criteria andMobileGreaterThanOrEqualTo(String value) {
            addCriterion("MOBILE >=", value, "mobile");
            return this;
        }

        public Criteria andMobileLessThan(String value) {
            addCriterion("MOBILE <", value, "mobile");
            return this;
        }

        public Criteria andMobileLessThanOrEqualTo(String value) {
            addCriterion("MOBILE <=", value, "mobile");
            return this;
        }

        public Criteria andMobileLike(String value) {
            addCriterion("MOBILE LIKE", value, "mobile");
            return this;
        }

        public Criteria andMobileNotLike(String value) {
            addCriterion("MOBILE NOT LIKE", value, "mobile");
            return this;
        }

        public Criteria andMobileIn(String[] values) {
            addCriterion("MOBILE IN", values, "mobile");
            return this;
        }

        public Criteria andMobileIn(List<String> values) {
            addCriterion("MOBILE IN", values, "mobile");
            return this;
        }

        public Criteria andMobileNotIn(String[] values) {
            addCriterion("MOBILE NOT IN", values, "mobile");
            return this;
        }

        public Criteria andMobileNotIn(List<String> values) {
            addCriterion("MOBILE NOT IN", values, "mobile");
            return this;
        }

        public Criteria andMobileBetween(String value1, String value2) {
            addCriterion("MOBILE BETWEEN", value1, value2, "mobile");
            return this;
        }

        public Criteria andMobileNotBetween(String value1, String value2) {
            addCriterion("MOBILE NOT BETWEEN", value1, value2, "mobile");
            return this;
        }

        public Criteria andClientTypeIsNull() {
            addCriterion("CLIENT_TYPE IS NULL");
            return this;
        }

        public Criteria andClientTypeIsNotNull() {
            addCriterion("CLIENT_TYPE IS NOT NULL");
            return this;
        }

        public Criteria andClientTypeEqualTo(String value) {
            addCriterion("CLIENT_TYPE =", value, "clientType");
            return this;
        }

        public Criteria andClientTypeNotEqualTo(String value) {
            addCriterion("CLIENT_TYPE <>", value, "clientType");
            return this;
        }

        public Criteria andClientTypeGreaterThan(String value) {
            addCriterion("CLIENT_TYPE >", value, "clientType");
            return this;
        }

        public Criteria andClientTypeGreaterThanOrEqualTo(String value) {
            addCriterion("CLIENT_TYPE >=", value, "clientType");
            return this;
        }

        public Criteria andClientTypeLessThan(String value) {
            addCriterion("CLIENT_TYPE <", value, "clientType");
            return this;
        }

        public Criteria andClientTypeLessThanOrEqualTo(String value) {
            addCriterion("CLIENT_TYPE <=", value, "clientType");
            return this;
        }

        public Criteria andClientTypeLike(String value) {
            addCriterion("CLIENT_TYPE LIKE", value, "clientType");
            return this;
        }

        public Criteria andClientTypeNotLike(String value) {
            addCriterion("CLIENT_TYPE NOT LIKE", value, "clientType");
            return this;
        }

        public Criteria andClientTypeIn(String[] values) {
            addCriterion("CLIENT_TYPE IN", values, "clientType");
            return this;
        }

        public Criteria andClientTypeIn(List<String> values) {
            addCriterion("CLIENT_TYPE IN", values, "clientType");
            return this;
        }

        public Criteria andClientTypeNotIn(String[] values) {
            addCriterion("CLIENT_TYPE NOT IN", values, "clientType");
            return this;
        }

        public Criteria andClientTypeNotIn(List<String> values) {
            addCriterion("CLIENT_TYPE NOT IN", values, "clientType");
            return this;
        }

        public Criteria andClientTypeBetween(String value1, String value2) {
            addCriterion("CLIENT_TYPE BETWEEN", value1, value2, "clientType");
            return this;
        }

        public Criteria andClientTypeNotBetween(String value1, String value2) {
            addCriterion("CLIENT_TYPE NOT BETWEEN", value1, value2, "clientType");
            return this;
        }

        public Criteria andStatusIsNull() {
            addCriterion("STATUS IS NULL");
            return this;
        }

        public Criteria andStatusIsNotNull() {
            addCriterion("STATUS IS NOT NULL");
            return this;
        }

        public Criteria andStatusEqualTo(String value) {
            addCriterion("STATUS =", value, "status");
            return this;
        }

        public Criteria andStatusNotEqualTo(String value) {
            addCriterion("STATUS <>", value, "status");
            return this;
        }

        public Criteria andStatusGreaterThan(String value) {
            addCriterion("STATUS >", value, "status");
            return this;
        }

        public Criteria andStatusGreaterThanOrEqualTo(String value) {
            addCriterion("STATUS >=", value, "status");
            return this;
        }

        public Criteria andStatusLessThan(String value) {
            addCriterion("STATUS <", value, "status");
            return this;
        }

        public Criteria andStatusLessThanOrEqualTo(String value) {
            addCriterion("STATUS <=", value, "status");
            return this;
        }

        public Criteria andStatusLike(String value) {
            addCriterion("STATUS LIKE", value, "status");
            return this;
        }

        public Criteria andStatusNotLike(String value) {
            addCriterion("STATUS NOT LIKE", value, "status");
            return this;
        }

        public Criteria andStatusIn(String[] values) {
            addCriterion("STATUS IN", values, "status");
            return this;
        }

        public Criteria andStatusIn(List<String> values) {
            addCriterion("STATUS IN", values, "status");
            return this;
        }

        public Criteria andStatusNotIn(String[] values) {
            addCriterion("STATUS NOT IN", values, "status");
            return this;
        }

        public Criteria andStatusNotIn(List<String> values) {
            addCriterion("STATUS NOT IN", values, "status");
            return this;
        }

        public Criteria andStatusBetween(String value1, String value2) {
            addCriterion("STATUS BETWEEN", value1, value2, "status");
            return this;
        }

        public Criteria andStatusNotBetween(String value1, String value2) {
            addCriterion("STATUS NOT BETWEEN", value1, value2, "status");
            return this;
        }

        public Criteria andRemarkIsNull() {
            addCriterion("REMARK IS NULL");
            return this;
        }

        public Criteria andRemarkIsNotNull() {
            addCriterion("REMARK IS NOT NULL");
            return this;
        }

        public Criteria andRemarkEqualTo(String value) {
            addCriterion("REMARK =", value, "remark");
            return this;
        }

        public Criteria andRemarkNotEqualTo(String value) {
            addCriterion("REMARK <>", value, "remark");
            return this;
        }

        public Criteria andRemarkGreaterThan(String value) {
            addCriterion("REMARK >", value, "remark");
            return this;
        }

        public Criteria andRemarkGreaterThanOrEqualTo(String value) {
            addCriterion("REMARK >=", value, "remark");
            return this;
        }

        public Criteria andRemarkLessThan(String value) {
            addCriterion("REMARK <", value, "remark");
            return this;
        }

        public Criteria andRemarkLessThanOrEqualTo(String value) {
            addCriterion("REMARK <=", value, "remark");
            return this;
        }

        public Criteria andRemarkLike(String value) {
            addCriterion("REMARK LIKE", value, "remark");
            return this;
        }

        public Criteria andRemarkNotLike(String value) {
            addCriterion("REMARK NOT LIKE", value, "remark");
            return this;
        }

        public Criteria andRemarkIn(String[] values) {
            addCriterion("REMARK IN", values, "remark");
            return this;
        }

        public Criteria andRemarkIn(List<String> values) {
            addCriterion("REMARK IN", values, "remark");
            return this;
        }

        public Criteria andRemarkNotIn(String[] values) {
            addCriterion("REMARK NOT IN", values, "remark");
            return this;
        }

        public Criteria andRemarkNotIn(List<String> values) {
            addCriterion("REMARK NOT IN", values, "remark");
            return this;
        }

        public Criteria andRemarkBetween(String value1, String value2) {
            addCriterion("REMARK BETWEEN", value1, value2, "remark");
            return this;
        }

        public Criteria andRemarkNotBetween(String value1, String value2) {
            addCriterion("REMARK NOT BETWEEN", value1, value2, "remark");
            return this;
        }

        public Criteria andRegisterAppIdIsNull() {
            addCriterion("REGISTER_APP_ID IS NULL");
            return this;
        }

        public Criteria andRegisterAppIdIsNotNull() {
            addCriterion("REGISTER_APP_ID IS NOT NULL");
            return this;
        }

        public Criteria andRegisterAppIdEqualTo(long value) {
            addCriterion("REGISTER_APP_ID =", new Long(value), "registerAppId");
            return this;
        }

        public Criteria andRegisterAppIdNotEqualTo(long value) {
            addCriterion("REGISTER_APP_ID <>", new Long(value), "registerAppId");
            return this;
        }

        public Criteria andRegisterAppIdGreaterThan(long value) {
            addCriterion("REGISTER_APP_ID >", new Long(value), "registerAppId");
            return this;
        }

        public Criteria andRegisterAppIdGreaterThanOrEqualTo(long value) {
            addCriterion("REGISTER_APP_ID >=", new Long(value), "registerAppId");
            return this;
        }

        public Criteria andRegisterAppIdLessThan(long value) {
            addCriterion("REGISTER_APP_ID <", new Long(value), "registerAppId");
            return this;
        }

        public Criteria andRegisterAppIdLessThanOrEqualTo(long value) {
            addCriterion("REGISTER_APP_ID <=", new Long(value), "registerAppId");
            return this;
        }

        public Criteria andRegisterAppIdIn(long[] values) {
            addCriterion("REGISTER_APP_ID IN", values, "registerAppId");
            return this;
        }

        public Criteria andRegisterAppIdIn(List<Long> values) {
            addCriterion("REGISTER_APP_ID IN", values, "registerAppId");
            return this;
        }

        public Criteria andRegisterAppIdNotIn(long[] values) {
            addCriterion("REGISTER_APP_ID NOT IN", values, "registerAppId");
            return this;
        }

        public Criteria andRegisterAppIdNotIn(List<Long> values) {
            addCriterion("REGISTER_APP_ID NOT IN", values, "registerAppId");
            return this;
        }

        public Criteria andRegisterAppIdBetween(long value1, long value2) {
            addCriterion("REGISTER_APP_ID BETWEEN", new Long(value1), new Long(value2), "registerAppId");
            return this;
        }

        public Criteria andRegisterAppIdNotBetween(long value1, long value2) {
            addCriterion("REGISTER_APP_ID NOT BETWEEN", new Long(value1), new Long(value2), "registerAppId");
            return this;
        }

        public Criteria andRegisterOperatorIsNull() {
            addCriterion("REGISTER_OPERATOR IS NULL");
            return this;
        }

        public Criteria andRegisterOperatorIsNotNull() {
            addCriterion("REGISTER_OPERATOR IS NOT NULL");
            return this;
        }

        public Criteria andRegisterOperatorEqualTo(Long value) {
            addCriterion("REGISTER_OPERATOR =", value, "registerOperator");
            return this;
        }

        public Criteria andRegisterOperatorNotEqualTo(Long value) {
            addCriterion("REGISTER_OPERATOR <>", value, "registerOperator");
            return this;
        }

        public Criteria andRegisterOperatorGreaterThan(Long value) {
            addCriterion("REGISTER_OPERATOR >", value, "registerOperator");
            return this;
        }

        public Criteria andRegisterOperatorGreaterThanOrEqualTo(Long value) {
            addCriterion("REGISTER_OPERATOR >=", value, "registerOperator");
            return this;
        }

        public Criteria andRegisterOperatorLessThan(Long value) {
            addCriterion("REGISTER_OPERATOR <", value, "registerOperator");
            return this;
        }

        public Criteria andRegisterOperatorLessThanOrEqualTo(Long value) {
            addCriterion("REGISTER_OPERATOR <=", value, "registerOperator");
            return this;
        }

        public Criteria andRegisterOperatorIn(Long[] values) {
            addCriterion("REGISTER_OPERATOR IN", values, "registerOperator");
            return this;
        }

        public Criteria andRegisterOperatorIn(List<Long> values) {
            addCriterion("REGISTER_OPERATOR IN", values, "registerOperator");
            return this;
        }

        public Criteria andRegisterOperatorNotIn(Long[] values) {
            addCriterion("REGISTER_OPERATOR NOT IN", values, "registerOperator");
            return this;
        }

        public Criteria andRegisterOperatorNotIn(List<Long> values) {
            addCriterion("REGISTER_OPERATOR NOT IN", values, "registerOperator");
            return this;
        }

        public Criteria andRegisterOperatorBetween(Long value1, Long value2) {
            addCriterion("REGISTER_OPERATOR BETWEEN", value1, value2, "registerOperator");
            return this;
        }

        public Criteria andRegisterOperatorNotBetween(Long value1, Long value2) {
            addCriterion("REGISTER_OPERATOR NOT BETWEEN", value1, value2, "registerOperator");
            return this;
        }

        public Criteria andRegisterTimeIsNull() {
            addCriterion("REGISTER_TIME IS NULL");
            return this;
        }

        public Criteria andRegisterTimeIsNotNull() {
            addCriterion("REGISTER_TIME IS NOT NULL");
            return this;
        }

        public Criteria andRegisterTimeEqualTo(Date value) {
            addCriterion("REGISTER_TIME =", value, "registerTime");
            return this;
        }

        public Criteria andRegisterTimeNotEqualTo(Date value) {
            addCriterion("REGISTER_TIME <>", value, "registerTime");
            return this;
        }

        public Criteria andRegisterTimeGreaterThan(Date value) {
            addCriterion("REGISTER_TIME >", value, "registerTime");
            return this;
        }

        public Criteria andRegisterTimeGreaterThanOrEqualTo(Date value) {
            addCriterion("REGISTER_TIME >=", value, "registerTime");
            return this;
        }

        public Criteria andRegisterTimeLessThan(Date value) {
            addCriterion("REGISTER_TIME <", value, "registerTime");
            return this;
        }

        public Criteria andRegisterTimeLessThanOrEqualTo(Date value) {
            addCriterion("REGISTER_TIME <=", value, "registerTime");
            return this;
        }

        public Criteria andRegisterTimeIn(Date[] values) {
            addCriterion("REGISTER_TIME IN", values, "registerTime");
            return this;
        }

        public Criteria andRegisterTimeIn(List<Date> values) {
            addCriterion("REGISTER_TIME IN", values, "registerTime");
            return this;
        }

        public Criteria andRegisterTimeNotIn(Date[] values) {
            addCriterion("REGISTER_TIME NOT IN", values, "registerTime");
            return this;
        }

        public Criteria andRegisterTimeNotIn(List<Date> values) {
            addCriterion("REGISTER_TIME NOT IN", values, "registerTime");
            return this;
        }

        public Criteria andRegisterTimeBetween(Date value1, Date value2) {
            addCriterion("REGISTER_TIME BETWEEN", value1, value2, "registerTime");
            return this;
        }

        public Criteria andRegisterTimeNotBetween(Date value1, Date value2) {
            addCriterion("REGISTER_TIME NOT BETWEEN", value1, value2, "registerTime");
            return this;
        }

        public Criteria andOperateAppIdIsNull() {
            addCriterion("OPERATE_APP_ID IS NULL");
            return this;
        }

        public Criteria andOperateAppIdIsNotNull() {
            addCriterion("OPERATE_APP_ID IS NOT NULL");
            return this;
        }

        public Criteria andOperateAppIdEqualTo(Long value) {
            addCriterion("OPERATE_APP_ID =", value, "operateAppId");
            return this;
        }

        public Criteria andOperateAppIdNotEqualTo(Long value) {
            addCriterion("OPERATE_APP_ID <>", value, "operateAppId");
            return this;
        }

        public Criteria andOperateAppIdGreaterThan(Long value) {
            addCriterion("OPERATE_APP_ID >", value, "operateAppId");
            return this;
        }

        public Criteria andOperateAppIdGreaterThanOrEqualTo(Long value) {
            addCriterion("OPERATE_APP_ID >=", value, "operateAppId");
            return this;
        }

        public Criteria andOperateAppIdLessThan(Long value) {
            addCriterion("OPERATE_APP_ID <", value, "operateAppId");
            return this;
        }

        public Criteria andOperateAppIdLessThanOrEqualTo(Long value) {
            addCriterion("OPERATE_APP_ID <=", value, "operateAppId");
            return this;
        }

        public Criteria andOperateAppIdIn(Long[] values) {
            addCriterion("OPERATE_APP_ID IN", values, "operateAppId");
            return this;
        }

        public Criteria andOperateAppIdIn(List<Long> values) {
            addCriterion("OPERATE_APP_ID IN", values, "operateAppId");
            return this;
        }

        public Criteria andOperateAppIdNotIn(Long[] values) {
            addCriterion("OPERATE_APP_ID NOT IN", values, "operateAppId");
            return this;
        }

        public Criteria andOperateAppIdNotIn(List<Long> values) {
            addCriterion("OPERATE_APP_ID NOT IN", values, "operateAppId");
            return this;
        }

        public Criteria andOperateAppIdBetween(Long value1, Long value2) {
            addCriterion("OPERATE_APP_ID BETWEEN", value1, value2, "operateAppId");
            return this;
        }

        public Criteria andOperateAppIdNotBetween(Long value1, Long value2) {
            addCriterion("OPERATE_APP_ID NOT BETWEEN", value1, value2, "operateAppId");
            return this;
        }

        public Criteria andOperatorIsNull() {
            addCriterion("OPERATOR IS NULL");
            return this;
        }

        public Criteria andOperatorIsNotNull() {
            addCriterion("OPERATOR IS NOT NULL");
            return this;
        }

        public Criteria andOperatorEqualTo(Long value) {
            addCriterion("OPERATOR =", value, "operator");
            return this;
        }

        public Criteria andOperatorNotEqualTo(Long value) {
            addCriterion("OPERATOR <>", value, "operator");
            return this;
        }

        public Criteria andOperatorGreaterThan(Long value) {
            addCriterion("OPERATOR >", value, "operator");
            return this;
        }

        public Criteria andOperatorGreaterThanOrEqualTo(Long value) {
            addCriterion("OPERATOR >=", value, "operator");
            return this;
        }

        public Criteria andOperatorLessThan(Long value) {
            addCriterion("OPERATOR <", value, "operator");
            return this;
        }

        public Criteria andOperatorLessThanOrEqualTo(Long value) {
            addCriterion("OPERATOR <=", value, "operator");
            return this;
        }

        public Criteria andOperatorIn(Long[] values) {
            addCriterion("OPERATOR IN", values, "operator");
            return this;
        }

        public Criteria andOperatorIn(List<Long> values) {
            addCriterion("OPERATOR IN", values, "operator");
            return this;
        }

        public Criteria andOperatorNotIn(Long[] values) {
            addCriterion("OPERATOR NOT IN", values, "operator");
            return this;
        }

        public Criteria andOperatorNotIn(List<Long> values) {
            addCriterion("OPERATOR NOT IN", values, "operator");
            return this;
        }

        public Criteria andOperatorBetween(Long value1, Long value2) {
            addCriterion("OPERATOR BETWEEN", value1, value2, "operator");
            return this;
        }

        public Criteria andOperatorNotBetween(Long value1, Long value2) {
            addCriterion("OPERATOR NOT BETWEEN", value1, value2, "operator");
            return this;
        }

        public Criteria andOperateTimeIsNull() {
            addCriterion("OPERATE_TIME IS NULL");
            return this;
        }

        public Criteria andOperateTimeIsNotNull() {
            addCriterion("OPERATE_TIME IS NOT NULL");
            return this;
        }

        public Criteria andOperateTimeEqualTo(Date value) {
            addCriterion("OPERATE_TIME =", value, "operateTime");
            return this;
        }

        public Criteria andOperateTimeNotEqualTo(Date value) {
            addCriterion("OPERATE_TIME <>", value, "operateTime");
            return this;
        }

        public Criteria andOperateTimeGreaterThan(Date value) {
            addCriterion("OPERATE_TIME >", value, "operateTime");
            return this;
        }

        public Criteria andOperateTimeGreaterThanOrEqualTo(Date value) {
            addCriterion("OPERATE_TIME >=", value, "operateTime");
            return this;
        }

        public Criteria andOperateTimeLessThan(Date value) {
            addCriterion("OPERATE_TIME <", value, "operateTime");
            return this;
        }

        public Criteria andOperateTimeLessThanOrEqualTo(Date value) {
            addCriterion("OPERATE_TIME <=", value, "operateTime");
            return this;
        }

        public Criteria andOperateTimeIn(Date[] values) {
            addCriterion("OPERATE_TIME IN", values, "operateTime");
            return this;
        }

        public Criteria andOperateTimeIn(List<Date> values) {
            addCriterion("OPERATE_TIME IN", values, "operateTime");
            return this;
        }

        public Criteria andOperateTimeNotIn(Date[] values) {
            addCriterion("OPERATE_TIME NOT IN", values, "operateTime");
            return this;
        }

        public Criteria andOperateTimeNotIn(List<Date> values) {
            addCriterion("OPERATE_TIME NOT IN", values, "operateTime");
            return this;
        }

        public Criteria andOperateTimeBetween(Date value1, Date value2) {
            addCriterion("OPERATE_TIME BETWEEN", value1, value2, "operateTime");
            return this;
        }

        public Criteria andOperateTimeNotBetween(Date value1, Date value2) {
            addCriterion("OPERATE_TIME NOT BETWEEN", value1, value2, "operateTime");
            return this;
        }

        public Criteria andLastLoginTimeIsNull() {
            addCriterion("LAST_LOGIN_TIME IS NULL");
            return this;
        }

        public Criteria andLastLoginTimeIsNotNull() {
            addCriterion("LAST_LOGIN_TIME IS NOT NULL");
            return this;
        }

        public Criteria andLastLoginTimeEqualTo(Date value) {
            addCriterion("LAST_LOGIN_TIME =", value, "lastLoginTime");
            return this;
        }

        public Criteria andLastLoginTimeNotEqualTo(Date value) {
            addCriterion("LAST_LOGIN_TIME <>", value, "lastLoginTime");
            return this;
        }

        public Criteria andLastLoginTimeGreaterThan(Date value) {
            addCriterion("LAST_LOGIN_TIME >", value, "lastLoginTime");
            return this;
        }

        public Criteria andLastLoginTimeGreaterThanOrEqualTo(Date value) {
            addCriterion("LAST_LOGIN_TIME >=", value, "lastLoginTime");
            return this;
        }

        public Criteria andLastLoginTimeLessThan(Date value) {
            addCriterion("LAST_LOGIN_TIME <", value, "lastLoginTime");
            return this;
        }

        public Criteria andLastLoginTimeLessThanOrEqualTo(Date value) {
            addCriterion("LAST_LOGIN_TIME <=", value, "lastLoginTime");
            return this;
        }

        public Criteria andLastLoginTimeIn(Date[] values) {
            addCriterion("LAST_LOGIN_TIME IN", values, "lastLoginTime");
            return this;
        }

        public Criteria andLastLoginTimeIn(List<Date> values) {
            addCriterion("LAST_LOGIN_TIME IN", values, "lastLoginTime");
            return this;
        }

        public Criteria andLastLoginTimeNotIn(Date[] values) {
            addCriterion("LAST_LOGIN_TIME NOT IN", values, "lastLoginTime");
            return this;
        }

        public Criteria andLastLoginTimeNotIn(List<Date> values) {
            addCriterion("LAST_LOGIN_TIME NOT IN", values, "lastLoginTime");
            return this;
        }

        public Criteria andLastLoginTimeBetween(Date value1, Date value2) {
            addCriterion("LAST_LOGIN_TIME BETWEEN", value1, value2, "lastLoginTime");
            return this;
        }

        public Criteria andLastLoginTimeNotBetween(Date value1, Date value2) {
            addCriterion("LAST_LOGIN_TIME NOT BETWEEN", value1, value2, "lastLoginTime");
            return this;
        }

        public Criteria andLastLoginIpIsNull() {
            addCriterion("LAST_LOGIN_IP IS NULL");
            return this;
        }

        public Criteria andLastLoginIpIsNotNull() {
            addCriterion("LAST_LOGIN_IP IS NOT NULL");
            return this;
        }

        public Criteria andLastLoginIpEqualTo(String value) {
            addCriterion("LAST_LOGIN_IP =", value, "lastLoginIp");
            return this;
        }

        public Criteria andLastLoginIpNotEqualTo(String value) {
            addCriterion("LAST_LOGIN_IP <>", value, "lastLoginIp");
            return this;
        }

        public Criteria andLastLoginIpGreaterThan(String value) {
            addCriterion("LAST_LOGIN_IP >", value, "lastLoginIp");
            return this;
        }

        public Criteria andLastLoginIpGreaterThanOrEqualTo(String value) {
            addCriterion("LAST_LOGIN_IP >=", value, "lastLoginIp");
            return this;
        }

        public Criteria andLastLoginIpLessThan(String value) {
            addCriterion("LAST_LOGIN_IP <", value, "lastLoginIp");
            return this;
        }

        public Criteria andLastLoginIpLessThanOrEqualTo(String value) {
            addCriterion("LAST_LOGIN_IP <=", value, "lastLoginIp");
            return this;
        }

        public Criteria andLastLoginIpLike(String value) {
            addCriterion("LAST_LOGIN_IP LIKE", value, "lastLoginIp");
            return this;
        }

        public Criteria andLastLoginIpNotLike(String value) {
            addCriterion("LAST_LOGIN_IP NOT LIKE", value, "lastLoginIp");
            return this;
        }

        public Criteria andLastLoginIpIn(String[] values) {
            addCriterion("LAST_LOGIN_IP IN", values, "lastLoginIp");
            return this;
        }

        public Criteria andLastLoginIpIn(List<String> values) {
            addCriterion("LAST_LOGIN_IP IN", values, "lastLoginIp");
            return this;
        }

        public Criteria andLastLoginIpNotIn(String[] values) {
            addCriterion("LAST_LOGIN_IP NOT IN", values, "lastLoginIp");
            return this;
        }

        public Criteria andLastLoginIpNotIn(List<String> values) {
            addCriterion("LAST_LOGIN_IP NOT IN", values, "lastLoginIp");
            return this;
        }

        public Criteria andLastLoginIpBetween(String value1, String value2) {
            addCriterion("LAST_LOGIN_IP BETWEEN", value1, value2, "lastLoginIp");
            return this;
        }

        public Criteria andLastLoginIpNotBetween(String value1, String value2) {
            addCriterion("LAST_LOGIN_IP NOT BETWEEN", value1, value2, "lastLoginIp");
            return this;
        }
    }
}