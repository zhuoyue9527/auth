package com.afis.cloud.entities.model.auth;

import java.lang.reflect.Array;
import java.util.ArrayList;
import java.util.Date;
import java.util.HashMap;
import java.util.Iterator;
import java.util.LinkedHashMap;
import java.util.List;
import java.util.Map;
import java.util.Map.Entry;

public class ApplicationExample {
    /**
     * This field was generated by www.sacool.com iBATIS builder.
     * <br>This field corresponds to the database table T_A_APPLICATION
     *
     * @sacoolbuildergenerated 2018-10-31 11:01:44
     * @author sacool ibatis builder Team
     */
    private LinkedHashMap<String, String> orderByClauseMap;

    /**
     * This field was generated by www.sacool.com iBATIS builder.
     * <br>This field corresponds to the database table T_A_APPLICATION
     *
     * @sacoolbuildergenerated 2018-10-31 11:01:44
     * @author sacool ibatis builder Team
     */
    private String orderByClause;

    /**
     * This field was generated by www.sacool.com iBATIS builder.
     * <br>This field corresponds to the database table T_A_APPLICATION
     *
     * @sacoolbuildergenerated 2018-10-31 11:01:44
     * @author sacool ibatis builder Team
     */
    protected String alias;

    /**
     * This field was generated by www.sacool.com iBATIS builder.
     * <br>This field corresponds to the database table T_A_APPLICATION
     *
     * @sacoolbuildergenerated 2018-10-31 11:01:44
     * @author sacool ibatis builder Team
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by www.sacool.com iBATIS builder.
     * <br>This method corresponds to the database table T_A_APPLICATION
     *
     * @sacoolbuildergenerated 2018-10-31 11:01:44
     * @author sacool ibatis builder Team
     */
    public ApplicationExample() {
        oredCriteria = new ArrayList<Criteria>();
        orderByClauseMap = new LinkedHashMap<String, String>();
    }

    /**
     * This method was generated by www.sacool.com iBATIS builder.
     * <br>This method corresponds to the database table T_A_APPLICATION
     * @param alias The dynamic alias of the table.
     *
     * @sacoolbuildergenerated 2018-10-31 11:01:44
     * @author sacool ibatis builder Team
     */
    public ApplicationExample(String alias) {
        this();
        this.alias = alias;
    }

    /**
     * This method was generated by www.sacool.com iBATIS builder.
     * <br>This method corresponds to the database table T_A_APPLICATION
     * @param example Another example will be copied to this.
     *
     * @sacoolbuildergenerated 2018-10-31 11:01:44
     * @author sacool ibatis builder Team
     */
    protected ApplicationExample(ApplicationExample example) {
        this.orderByClauseMap = new LinkedHashMap<String, String>(example.orderByClauseMap);
        this.oredCriteria = example.oredCriteria;
    }

    /**
     * This method was generated by www.sacool.com iBATIS builder.
     * <br>This method corresponds to the database table T_A_APPLICATION
     * @param example Another example will be copied to this.
     * @param alias The dynamic alias of the table.
     *
     * @sacoolbuildergenerated 2018-10-31 11:01:44
     * @author sacool ibatis builder Team
     */
    protected ApplicationExample(ApplicationExample example, String alias) {
        this(example);
        this.alias = alias;
    }

    /**
     * This method was generated by www.sacool.com iBATIS builder.
     * <br>This method corresponds to the database table T_A_APPLICATION
     *
     * @sacoolbuildergenerated 2018-10-31 11:01:44
     * @author sacool ibatis builder Team
     */
    public ApplicationExample orderById(String direction) {
        return this.orderBy("ID", direction);
    }

    /**
     * This method was generated by www.sacool.com iBATIS builder.
     * <br>This method corresponds to the database table T_A_APPLICATION
     *
     * @sacoolbuildergenerated 2018-10-31 11:01:44
     * @author sacool ibatis builder Team
     */
    public String removeOrderById() {
        return this.removeOrderBy("ID");
    }

    /**
     * This method was generated by www.sacool.com iBATIS builder.
     * <br>This method corresponds to the database table T_A_APPLICATION
     *
     * @sacoolbuildergenerated 2018-10-31 11:01:44
     * @author sacool ibatis builder Team
     */
    public ApplicationExample orderByAppCode(String direction) {
        return this.orderBy("APP_CODE", direction);
    }

    /**
     * This method was generated by www.sacool.com iBATIS builder.
     * <br>This method corresponds to the database table T_A_APPLICATION
     *
     * @sacoolbuildergenerated 2018-10-31 11:01:44
     * @author sacool ibatis builder Team
     */
    public String removeOrderByAppCode() {
        return this.removeOrderBy("APP_CODE");
    }

    /**
     * This method was generated by www.sacool.com iBATIS builder.
     * <br>This method corresponds to the database table T_A_APPLICATION
     *
     * @sacoolbuildergenerated 2018-10-31 11:01:44
     * @author sacool ibatis builder Team
     */
    public ApplicationExample orderByAppName(String direction) {
        return this.orderBy("APP_NAME", direction);
    }

    /**
     * This method was generated by www.sacool.com iBATIS builder.
     * <br>This method corresponds to the database table T_A_APPLICATION
     *
     * @sacoolbuildergenerated 2018-10-31 11:01:44
     * @author sacool ibatis builder Team
     */
    public String removeOrderByAppName() {
        return this.removeOrderBy("APP_NAME");
    }

    /**
     * This method was generated by www.sacool.com iBATIS builder.
     * <br>This method corresponds to the database table T_A_APPLICATION
     *
     * @sacoolbuildergenerated 2018-10-31 11:01:44
     * @author sacool ibatis builder Team
     */
    public ApplicationExample orderByKey(String direction) {
        return this.orderBy("KEY", direction);
    }

    /**
     * This method was generated by www.sacool.com iBATIS builder.
     * <br>This method corresponds to the database table T_A_APPLICATION
     *
     * @sacoolbuildergenerated 2018-10-31 11:01:44
     * @author sacool ibatis builder Team
     */
    public String removeOrderByKey() {
        return this.removeOrderBy("KEY");
    }

    /**
     * This method was generated by www.sacool.com iBATIS builder.
     * <br>This method corresponds to the database table T_A_APPLICATION
     *
     * @sacoolbuildergenerated 2018-10-31 11:01:44
     * @author sacool ibatis builder Team
     */
    public ApplicationExample orderByUrlCallback(String direction) {
        return this.orderBy("URL_CALLBACK", direction);
    }

    /**
     * This method was generated by www.sacool.com iBATIS builder.
     * <br>This method corresponds to the database table T_A_APPLICATION
     *
     * @sacoolbuildergenerated 2018-10-31 11:01:44
     * @author sacool ibatis builder Team
     */
    public String removeOrderByUrlCallback() {
        return this.removeOrderBy("URL_CALLBACK");
    }

    /**
     * This method was generated by www.sacool.com iBATIS builder.
     * <br>This method corresponds to the database table T_A_APPLICATION
     *
     * @sacoolbuildergenerated 2018-10-31 11:01:44
     * @author sacool ibatis builder Team
     */
    public ApplicationExample orderByLogoPath(String direction) {
        return this.orderBy("LOGO_PATH", direction);
    }

    /**
     * This method was generated by www.sacool.com iBATIS builder.
     * <br>This method corresponds to the database table T_A_APPLICATION
     *
     * @sacoolbuildergenerated 2018-10-31 11:01:44
     * @author sacool ibatis builder Team
     */
    public String removeOrderByLogoPath() {
        return this.removeOrderBy("LOGO_PATH");
    }

    /**
     * This method was generated by www.sacool.com iBATIS builder.
     * <br>This method corresponds to the database table T_A_APPLICATION
     *
     * @sacoolbuildergenerated 2018-10-31 11:01:44
     * @author sacool ibatis builder Team
     */
    public ApplicationExample orderByStatus(String direction) {
        return this.orderBy("STATUS", direction);
    }

    /**
     * This method was generated by www.sacool.com iBATIS builder.
     * <br>This method corresponds to the database table T_A_APPLICATION
     *
     * @sacoolbuildergenerated 2018-10-31 11:01:44
     * @author sacool ibatis builder Team
     */
    public String removeOrderByStatus() {
        return this.removeOrderBy("STATUS");
    }

    /**
     * This method was generated by www.sacool.com iBATIS builder.
     * <br>This method corresponds to the database table T_A_APPLICATION
     *
     * @sacoolbuildergenerated 2018-10-31 11:01:44
     * @author sacool ibatis builder Team
     */
    public ApplicationExample orderByRemark(String direction) {
        return this.orderBy("REMARK", direction);
    }

    /**
     * This method was generated by www.sacool.com iBATIS builder.
     * <br>This method corresponds to the database table T_A_APPLICATION
     *
     * @sacoolbuildergenerated 2018-10-31 11:01:44
     * @author sacool ibatis builder Team
     */
    public String removeOrderByRemark() {
        return this.removeOrderBy("REMARK");
    }

    /**
     * This method was generated by www.sacool.com iBATIS builder.
     * <br>This method corresponds to the database table T_A_APPLICATION
     *
     * @sacoolbuildergenerated 2018-10-31 11:01:44
     * @author sacool ibatis builder Team
     */
    public ApplicationExample orderByOperateAppId(String direction) {
        return this.orderBy("OPERATE_APP_ID", direction);
    }

    /**
     * This method was generated by www.sacool.com iBATIS builder.
     * <br>This method corresponds to the database table T_A_APPLICATION
     *
     * @sacoolbuildergenerated 2018-10-31 11:01:44
     * @author sacool ibatis builder Team
     */
    public String removeOrderByOperateAppId() {
        return this.removeOrderBy("OPERATE_APP_ID");
    }

    /**
     * This method was generated by www.sacool.com iBATIS builder.
     * <br>This method corresponds to the database table T_A_APPLICATION
     *
     * @sacoolbuildergenerated 2018-10-31 11:01:44
     * @author sacool ibatis builder Team
     */
    public ApplicationExample orderByOperator(String direction) {
        return this.orderBy("OPERATOR", direction);
    }

    /**
     * This method was generated by www.sacool.com iBATIS builder.
     * <br>This method corresponds to the database table T_A_APPLICATION
     *
     * @sacoolbuildergenerated 2018-10-31 11:01:44
     * @author sacool ibatis builder Team
     */
    public String removeOrderByOperator() {
        return this.removeOrderBy("OPERATOR");
    }

    /**
     * This method was generated by www.sacool.com iBATIS builder.
     * <br>This method corresponds to the database table T_A_APPLICATION
     *
     * @sacoolbuildergenerated 2018-10-31 11:01:44
     * @author sacool ibatis builder Team
     */
    public ApplicationExample orderByOperateTime(String direction) {
        return this.orderBy("OPERATE_TIME", direction);
    }

    /**
     * This method was generated by www.sacool.com iBATIS builder.
     * <br>This method corresponds to the database table T_A_APPLICATION
     *
     * @sacoolbuildergenerated 2018-10-31 11:01:44
     * @author sacool ibatis builder Team
     */
    public String removeOrderByOperateTime() {
        return this.removeOrderBy("OPERATE_TIME");
    }

    /**
     * This method was generated by www.sacool.com iBATIS builder.
     * <br>This method corresponds to the database table T_A_APPLICATION
     *
     * @sacoolbuildergenerated 2018-10-31 11:01:44
     * @author sacool ibatis builder Team
     */
    public ApplicationExample orderBy(String field, String direction) {
        boolean have = orderByClauseMap.containsKey(field);
        String old = orderByClauseMap.put(field, direction);
        if(have && (old == null ? direction != null : !old.equals(direction))) orderByClause = null;
        return this;
    }

    /**
     * This method was generated by www.sacool.com iBATIS builder.
     * <br>This method corresponds to the database table T_A_APPLICATION
     *
     * @sacoolbuildergenerated 2018-10-31 11:01:44
     * @author sacool ibatis builder Team
     */
    public String removeOrderBy(String field) {
        if(orderByClauseMap.containsKey(field)){
            orderByClause = null;
            return orderByClauseMap.remove(field);
        }
        return null;
    }

    /**
     * This method was generated by www.sacool.com iBATIS builder.
     * <br>This method corresponds to the database table T_A_APPLICATION
     *
     * @sacoolbuildergenerated 2018-10-31 11:01:44
     * @author sacool ibatis builder Team
     */
    public void clearOrderByClause() {
        if(!orderByClauseMap.isEmpty()){
            orderByClause = null;
            orderByClauseMap.clear();
        }
    }

    /**
     * This method was generated by www.sacool.com iBATIS builder.
     * <br>This method corresponds to the database table T_A_APPLICATION
     *
     * @sacoolbuildergenerated 2018-10-31 11:01:44
     * @author sacool ibatis builder Team
     */
    public String getOrderByClause() {
        if(orderByClause == null){
            StringBuilder sb = new StringBuilder();
            Iterator<Entry<String, String>> iterator = orderByClauseMap.entrySet().iterator();
            boolean aliasEmpty = this.alias == null || this.alias.isEmpty();
            while(iterator.hasNext()){
                Entry<String, String> entry = iterator.next();
                String key = entry.getKey();
                String value = entry.getValue();
                boolean keyEmpty = key == null || key.isEmpty();
                boolean valueEmpty = value == null || value.isEmpty();
                if(!keyEmpty){
                    if(!aliasEmpty){
                        sb.append(this.alias);
                        sb.append(".");
                    }
                    sb.append(entry.getKey());
                }
                if(!valueEmpty){
                    if(!keyEmpty) sb.append(" ");
                    sb.append(entry.getValue());
                }
                if(!keyEmpty || !valueEmpty) sb.append(", ");
            }
            if(sb.length() != 0) sb.setLength(sb.length() - 2);
            orderByClause = sb.toString();
        }
        return orderByClause;
    }

    /**
     * This method was generated by www.sacool.com iBATIS builder.
     * <br>This method corresponds to the database table T_A_APPLICATION
     * @param alias The dynamic alias of the table.
     *
     * @sacoolbuildergenerated 2018-10-31 11:01:44
     * @author sacool ibatis builder Team
     */
    public void setAlias(String alias) {
        this.alias = alias;
        orderByClause = null;
    }

    /**
     * This method was generated by www.sacool.com iBATIS builder.
     * <br>This method corresponds to the database table T_A_APPLICATION
     *
     * @sacoolbuildergenerated 2018-10-31 11:01:44
     * @author sacool ibatis builder Team
     */
    public String getAlias() {
        return alias;
    }

    /**
     * This method was generated by www.sacool.com iBATIS builder.
     * <br>This method corresponds to the database table T_A_APPLICATION
     *
     * @sacoolbuildergenerated 2018-10-31 11:01:44
     * @author sacool ibatis builder Team
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by www.sacool.com iBATIS builder.
     * <br>This method corresponds to the database table T_A_APPLICATION
     *
     * @sacoolbuildergenerated 2018-10-31 11:01:44
     * @author sacool ibatis builder Team
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by www.sacool.com iBATIS builder.
     * <br>This method corresponds to the database table T_A_APPLICATION
     *
     * @sacoolbuildergenerated 2018-10-31 11:01:44
     * @author sacool ibatis builder Team
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if(oredCriteria.size() == 0) oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by www.sacool.com iBATIS builder.
     * <br>This method corresponds to the database table T_A_APPLICATION
     *
     * @sacoolbuildergenerated 2018-10-31 11:01:44
     * @author sacool ibatis builder Team
     */
    protected Criteria createCriteriaInternal() {
        return new Criteria();
    }

    /**
     * This method was generated by www.sacool.com iBATIS builder.
     * <br>This method corresponds to the database table T_A_APPLICATION
     *
     * @sacoolbuildergenerated 2018-10-31 11:01:44
     * @author sacool ibatis builder Team
     */
    public void clearOredCriteria() {
        oredCriteria.clear();
    }

    /**
     * This class was generated by www.sacool.com iBATIS builder.
     * <br>This class corresponds to the database table T_A_APPLICATION
     *
     * @sacoolbuildergenerated 2018-10-31 11:01:44
     * @author sacool ibatis builder Team
     */
    public static class Criteria {
        protected List<String> criteriaWithSqlSnippetValue;

        protected List<String> criteriaWithoutValue;

        protected List<Map<String, Object>> criteriaWithSingleValue;

        protected List<Map<String, Object>> criteriaWithListValue;

        protected List<Map<String, Object>> criteriaWithBetweenValue;

        protected Criteria() {
            super();
            criteriaWithSqlSnippetValue = new ArrayList<String>();
            criteriaWithoutValue = new ArrayList<String>();
            criteriaWithSingleValue = new ArrayList<Map<String, Object>>();
            criteriaWithListValue = new ArrayList<Map<String, Object>>();
            criteriaWithBetweenValue = new ArrayList<Map<String, Object>>();
        }

        public boolean isValid() {
            return criteriaWithSqlSnippetValue.size() > 0
                || criteriaWithoutValue.size() > 0
                || criteriaWithSingleValue.size() > 0
                || criteriaWithListValue.size() > 0
                || criteriaWithBetweenValue.size() > 0;
        }

        public List<String> getCriteriaWithSqlSnippetValue() {
            return criteriaWithSqlSnippetValue;
        }

        public List<String> getCriteriaWithoutValue() {
            return criteriaWithoutValue;
        }

        public List<Map<String, Object>> getCriteriaWithSingleValue() {
            return criteriaWithSingleValue;
        }

        public List<Map<String, Object>> getCriteriaWithListValue() {
            return criteriaWithListValue;
        }

        public List<Map<String, Object>> getCriteriaWithBetweenValue() {
            return criteriaWithBetweenValue;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteriaWithoutValue.add(condition);
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            List<Map<String, Object>> list = null;
            String valueKey = "value";
            if(value.getClass().isArray()) {
                if(Array.getLength(value) == 0) throw new RuntimeException("Value array for " + property + " cannot be empty");
                list = criteriaWithListValue;
                valueKey = "values";
            } else list = criteriaWithSingleValue;
            Map<String, Object> map = new HashMap<String, Object>();
            map.put("condition", condition);
            map.put(valueKey, value);
            list.add(map);
        }

        protected void addCriterion(String condition, List<? extends Object> values, String property) {
            if (values == null || values.size() == 0) {
                throw new RuntimeException("Value list for " + property + " cannot be null or empty");
            }
            Map<String, Object> map = new HashMap<String, Object>();
            map.put("condition", condition);
            map.put("values", values);
            criteriaWithListValue.add(map);
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            List<Object> list = new ArrayList<Object>();
            list.add(value1);
            list.add(value2);
            Map<String, Object> map = new HashMap<String, Object>();
            map.put("condition", condition);
            map.put("values", list);
            criteriaWithBetweenValue.add(map);
        }

        public Criteria andSQLSnippet(String sqlSnippet) {
            if(sqlSnippet == null){
                throw new RuntimeException("Value for sqlSnippet cannot be null");
            }
            criteriaWithSqlSnippetValue.add(sqlSnippet);
            return this;
        }

        public Criteria andIdIsNull() {
            addCriterion("ID IS NULL");
            return this;
        }

        public Criteria andIdIsNotNull() {
            addCriterion("ID IS NOT NULL");
            return this;
        }

        public Criteria andIdEqualTo(long value) {
            addCriterion("ID =", new Long(value), "id");
            return this;
        }

        public Criteria andIdNotEqualTo(long value) {
            addCriterion("ID <>", new Long(value), "id");
            return this;
        }

        public Criteria andIdGreaterThan(long value) {
            addCriterion("ID >", new Long(value), "id");
            return this;
        }

        public Criteria andIdGreaterThanOrEqualTo(long value) {
            addCriterion("ID >=", new Long(value), "id");
            return this;
        }

        public Criteria andIdLessThan(long value) {
            addCriterion("ID <", new Long(value), "id");
            return this;
        }

        public Criteria andIdLessThanOrEqualTo(long value) {
            addCriterion("ID <=", new Long(value), "id");
            return this;
        }

        public Criteria andIdIn(long[] values) {
            addCriterion("ID IN", values, "id");
            return this;
        }

        public Criteria andIdIn(List<Long> values) {
            addCriterion("ID IN", values, "id");
            return this;
        }

        public Criteria andIdNotIn(long[] values) {
            addCriterion("ID NOT IN", values, "id");
            return this;
        }

        public Criteria andIdNotIn(List<Long> values) {
            addCriterion("ID NOT IN", values, "id");
            return this;
        }

        public Criteria andIdBetween(long value1, long value2) {
            addCriterion("ID BETWEEN", new Long(value1), new Long(value2), "id");
            return this;
        }

        public Criteria andIdNotBetween(long value1, long value2) {
            addCriterion("ID NOT BETWEEN", new Long(value1), new Long(value2), "id");
            return this;
        }

        public Criteria andAppCodeIsNull() {
            addCriterion("APP_CODE IS NULL");
            return this;
        }

        public Criteria andAppCodeIsNotNull() {
            addCriterion("APP_CODE IS NOT NULL");
            return this;
        }

        public Criteria andAppCodeEqualTo(String value) {
            addCriterion("APP_CODE =", value, "appCode");
            return this;
        }

        public Criteria andAppCodeNotEqualTo(String value) {
            addCriterion("APP_CODE <>", value, "appCode");
            return this;
        }

        public Criteria andAppCodeGreaterThan(String value) {
            addCriterion("APP_CODE >", value, "appCode");
            return this;
        }

        public Criteria andAppCodeGreaterThanOrEqualTo(String value) {
            addCriterion("APP_CODE >=", value, "appCode");
            return this;
        }

        public Criteria andAppCodeLessThan(String value) {
            addCriterion("APP_CODE <", value, "appCode");
            return this;
        }

        public Criteria andAppCodeLessThanOrEqualTo(String value) {
            addCriterion("APP_CODE <=", value, "appCode");
            return this;
        }

        public Criteria andAppCodeLike(String value) {
            addCriterion("APP_CODE LIKE", value, "appCode");
            return this;
        }

        public Criteria andAppCodeNotLike(String value) {
            addCriterion("APP_CODE NOT LIKE", value, "appCode");
            return this;
        }

        public Criteria andAppCodeIn(String[] values) {
            addCriterion("APP_CODE IN", values, "appCode");
            return this;
        }

        public Criteria andAppCodeIn(List<String> values) {
            addCriterion("APP_CODE IN", values, "appCode");
            return this;
        }

        public Criteria andAppCodeNotIn(String[] values) {
            addCriterion("APP_CODE NOT IN", values, "appCode");
            return this;
        }

        public Criteria andAppCodeNotIn(List<String> values) {
            addCriterion("APP_CODE NOT IN", values, "appCode");
            return this;
        }

        public Criteria andAppCodeBetween(String value1, String value2) {
            addCriterion("APP_CODE BETWEEN", value1, value2, "appCode");
            return this;
        }

        public Criteria andAppCodeNotBetween(String value1, String value2) {
            addCriterion("APP_CODE NOT BETWEEN", value1, value2, "appCode");
            return this;
        }

        public Criteria andAppNameIsNull() {
            addCriterion("APP_NAME IS NULL");
            return this;
        }

        public Criteria andAppNameIsNotNull() {
            addCriterion("APP_NAME IS NOT NULL");
            return this;
        }

        public Criteria andAppNameEqualTo(String value) {
            addCriterion("APP_NAME =", value, "appName");
            return this;
        }

        public Criteria andAppNameNotEqualTo(String value) {
            addCriterion("APP_NAME <>", value, "appName");
            return this;
        }

        public Criteria andAppNameGreaterThan(String value) {
            addCriterion("APP_NAME >", value, "appName");
            return this;
        }

        public Criteria andAppNameGreaterThanOrEqualTo(String value) {
            addCriterion("APP_NAME >=", value, "appName");
            return this;
        }

        public Criteria andAppNameLessThan(String value) {
            addCriterion("APP_NAME <", value, "appName");
            return this;
        }

        public Criteria andAppNameLessThanOrEqualTo(String value) {
            addCriterion("APP_NAME <=", value, "appName");
            return this;
        }

        public Criteria andAppNameLike(String value) {
            addCriterion("APP_NAME LIKE", value, "appName");
            return this;
        }

        public Criteria andAppNameNotLike(String value) {
            addCriterion("APP_NAME NOT LIKE", value, "appName");
            return this;
        }

        public Criteria andAppNameIn(String[] values) {
            addCriterion("APP_NAME IN", values, "appName");
            return this;
        }

        public Criteria andAppNameIn(List<String> values) {
            addCriterion("APP_NAME IN", values, "appName");
            return this;
        }

        public Criteria andAppNameNotIn(String[] values) {
            addCriterion("APP_NAME NOT IN", values, "appName");
            return this;
        }

        public Criteria andAppNameNotIn(List<String> values) {
            addCriterion("APP_NAME NOT IN", values, "appName");
            return this;
        }

        public Criteria andAppNameBetween(String value1, String value2) {
            addCriterion("APP_NAME BETWEEN", value1, value2, "appName");
            return this;
        }

        public Criteria andAppNameNotBetween(String value1, String value2) {
            addCriterion("APP_NAME NOT BETWEEN", value1, value2, "appName");
            return this;
        }

        public Criteria andKeyIsNull() {
            addCriterion("KEY IS NULL");
            return this;
        }

        public Criteria andKeyIsNotNull() {
            addCriterion("KEY IS NOT NULL");
            return this;
        }

        public Criteria andKeyEqualTo(String value) {
            addCriterion("KEY =", value, "key");
            return this;
        }

        public Criteria andKeyNotEqualTo(String value) {
            addCriterion("KEY <>", value, "key");
            return this;
        }

        public Criteria andKeyGreaterThan(String value) {
            addCriterion("KEY >", value, "key");
            return this;
        }

        public Criteria andKeyGreaterThanOrEqualTo(String value) {
            addCriterion("KEY >=", value, "key");
            return this;
        }

        public Criteria andKeyLessThan(String value) {
            addCriterion("KEY <", value, "key");
            return this;
        }

        public Criteria andKeyLessThanOrEqualTo(String value) {
            addCriterion("KEY <=", value, "key");
            return this;
        }

        public Criteria andKeyLike(String value) {
            addCriterion("KEY LIKE", value, "key");
            return this;
        }

        public Criteria andKeyNotLike(String value) {
            addCriterion("KEY NOT LIKE", value, "key");
            return this;
        }

        public Criteria andKeyIn(String[] values) {
            addCriterion("KEY IN", values, "key");
            return this;
        }

        public Criteria andKeyIn(List<String> values) {
            addCriterion("KEY IN", values, "key");
            return this;
        }

        public Criteria andKeyNotIn(String[] values) {
            addCriterion("KEY NOT IN", values, "key");
            return this;
        }

        public Criteria andKeyNotIn(List<String> values) {
            addCriterion("KEY NOT IN", values, "key");
            return this;
        }

        public Criteria andKeyBetween(String value1, String value2) {
            addCriterion("KEY BETWEEN", value1, value2, "key");
            return this;
        }

        public Criteria andKeyNotBetween(String value1, String value2) {
            addCriterion("KEY NOT BETWEEN", value1, value2, "key");
            return this;
        }

        public Criteria andUrlCallbackIsNull() {
            addCriterion("URL_CALLBACK IS NULL");
            return this;
        }

        public Criteria andUrlCallbackIsNotNull() {
            addCriterion("URL_CALLBACK IS NOT NULL");
            return this;
        }

        public Criteria andUrlCallbackEqualTo(String value) {
            addCriterion("URL_CALLBACK =", value, "urlCallback");
            return this;
        }

        public Criteria andUrlCallbackNotEqualTo(String value) {
            addCriterion("URL_CALLBACK <>", value, "urlCallback");
            return this;
        }

        public Criteria andUrlCallbackGreaterThan(String value) {
            addCriterion("URL_CALLBACK >", value, "urlCallback");
            return this;
        }

        public Criteria andUrlCallbackGreaterThanOrEqualTo(String value) {
            addCriterion("URL_CALLBACK >=", value, "urlCallback");
            return this;
        }

        public Criteria andUrlCallbackLessThan(String value) {
            addCriterion("URL_CALLBACK <", value, "urlCallback");
            return this;
        }

        public Criteria andUrlCallbackLessThanOrEqualTo(String value) {
            addCriterion("URL_CALLBACK <=", value, "urlCallback");
            return this;
        }

        public Criteria andUrlCallbackLike(String value) {
            addCriterion("URL_CALLBACK LIKE", value, "urlCallback");
            return this;
        }

        public Criteria andUrlCallbackNotLike(String value) {
            addCriterion("URL_CALLBACK NOT LIKE", value, "urlCallback");
            return this;
        }

        public Criteria andUrlCallbackIn(String[] values) {
            addCriterion("URL_CALLBACK IN", values, "urlCallback");
            return this;
        }

        public Criteria andUrlCallbackIn(List<String> values) {
            addCriterion("URL_CALLBACK IN", values, "urlCallback");
            return this;
        }

        public Criteria andUrlCallbackNotIn(String[] values) {
            addCriterion("URL_CALLBACK NOT IN", values, "urlCallback");
            return this;
        }

        public Criteria andUrlCallbackNotIn(List<String> values) {
            addCriterion("URL_CALLBACK NOT IN", values, "urlCallback");
            return this;
        }

        public Criteria andUrlCallbackBetween(String value1, String value2) {
            addCriterion("URL_CALLBACK BETWEEN", value1, value2, "urlCallback");
            return this;
        }

        public Criteria andUrlCallbackNotBetween(String value1, String value2) {
            addCriterion("URL_CALLBACK NOT BETWEEN", value1, value2, "urlCallback");
            return this;
        }

        public Criteria andLogoPathIsNull() {
            addCriterion("LOGO_PATH IS NULL");
            return this;
        }

        public Criteria andLogoPathIsNotNull() {
            addCriterion("LOGO_PATH IS NOT NULL");
            return this;
        }

        public Criteria andLogoPathEqualTo(String value) {
            addCriterion("LOGO_PATH =", value, "logoPath");
            return this;
        }

        public Criteria andLogoPathNotEqualTo(String value) {
            addCriterion("LOGO_PATH <>", value, "logoPath");
            return this;
        }

        public Criteria andLogoPathGreaterThan(String value) {
            addCriterion("LOGO_PATH >", value, "logoPath");
            return this;
        }

        public Criteria andLogoPathGreaterThanOrEqualTo(String value) {
            addCriterion("LOGO_PATH >=", value, "logoPath");
            return this;
        }

        public Criteria andLogoPathLessThan(String value) {
            addCriterion("LOGO_PATH <", value, "logoPath");
            return this;
        }

        public Criteria andLogoPathLessThanOrEqualTo(String value) {
            addCriterion("LOGO_PATH <=", value, "logoPath");
            return this;
        }

        public Criteria andLogoPathLike(String value) {
            addCriterion("LOGO_PATH LIKE", value, "logoPath");
            return this;
        }

        public Criteria andLogoPathNotLike(String value) {
            addCriterion("LOGO_PATH NOT LIKE", value, "logoPath");
            return this;
        }

        public Criteria andLogoPathIn(String[] values) {
            addCriterion("LOGO_PATH IN", values, "logoPath");
            return this;
        }

        public Criteria andLogoPathIn(List<String> values) {
            addCriterion("LOGO_PATH IN", values, "logoPath");
            return this;
        }

        public Criteria andLogoPathNotIn(String[] values) {
            addCriterion("LOGO_PATH NOT IN", values, "logoPath");
            return this;
        }

        public Criteria andLogoPathNotIn(List<String> values) {
            addCriterion("LOGO_PATH NOT IN", values, "logoPath");
            return this;
        }

        public Criteria andLogoPathBetween(String value1, String value2) {
            addCriterion("LOGO_PATH BETWEEN", value1, value2, "logoPath");
            return this;
        }

        public Criteria andLogoPathNotBetween(String value1, String value2) {
            addCriterion("LOGO_PATH NOT BETWEEN", value1, value2, "logoPath");
            return this;
        }

        public Criteria andStatusIsNull() {
            addCriterion("STATUS IS NULL");
            return this;
        }

        public Criteria andStatusIsNotNull() {
            addCriterion("STATUS IS NOT NULL");
            return this;
        }

        public Criteria andStatusEqualTo(String value) {
            addCriterion("STATUS =", value, "status");
            return this;
        }

        public Criteria andStatusNotEqualTo(String value) {
            addCriterion("STATUS <>", value, "status");
            return this;
        }

        public Criteria andStatusGreaterThan(String value) {
            addCriterion("STATUS >", value, "status");
            return this;
        }

        public Criteria andStatusGreaterThanOrEqualTo(String value) {
            addCriterion("STATUS >=", value, "status");
            return this;
        }

        public Criteria andStatusLessThan(String value) {
            addCriterion("STATUS <", value, "status");
            return this;
        }

        public Criteria andStatusLessThanOrEqualTo(String value) {
            addCriterion("STATUS <=", value, "status");
            return this;
        }

        public Criteria andStatusLike(String value) {
            addCriterion("STATUS LIKE", value, "status");
            return this;
        }

        public Criteria andStatusNotLike(String value) {
            addCriterion("STATUS NOT LIKE", value, "status");
            return this;
        }

        public Criteria andStatusIn(String[] values) {
            addCriterion("STATUS IN", values, "status");
            return this;
        }

        public Criteria andStatusIn(List<String> values) {
            addCriterion("STATUS IN", values, "status");
            return this;
        }

        public Criteria andStatusNotIn(String[] values) {
            addCriterion("STATUS NOT IN", values, "status");
            return this;
        }

        public Criteria andStatusNotIn(List<String> values) {
            addCriterion("STATUS NOT IN", values, "status");
            return this;
        }

        public Criteria andStatusBetween(String value1, String value2) {
            addCriterion("STATUS BETWEEN", value1, value2, "status");
            return this;
        }

        public Criteria andStatusNotBetween(String value1, String value2) {
            addCriterion("STATUS NOT BETWEEN", value1, value2, "status");
            return this;
        }

        public Criteria andRemarkIsNull() {
            addCriterion("REMARK IS NULL");
            return this;
        }

        public Criteria andRemarkIsNotNull() {
            addCriterion("REMARK IS NOT NULL");
            return this;
        }

        public Criteria andRemarkEqualTo(String value) {
            addCriterion("REMARK =", value, "remark");
            return this;
        }

        public Criteria andRemarkNotEqualTo(String value) {
            addCriterion("REMARK <>", value, "remark");
            return this;
        }

        public Criteria andRemarkGreaterThan(String value) {
            addCriterion("REMARK >", value, "remark");
            return this;
        }

        public Criteria andRemarkGreaterThanOrEqualTo(String value) {
            addCriterion("REMARK >=", value, "remark");
            return this;
        }

        public Criteria andRemarkLessThan(String value) {
            addCriterion("REMARK <", value, "remark");
            return this;
        }

        public Criteria andRemarkLessThanOrEqualTo(String value) {
            addCriterion("REMARK <=", value, "remark");
            return this;
        }

        public Criteria andRemarkLike(String value) {
            addCriterion("REMARK LIKE", value, "remark");
            return this;
        }

        public Criteria andRemarkNotLike(String value) {
            addCriterion("REMARK NOT LIKE", value, "remark");
            return this;
        }

        public Criteria andRemarkIn(String[] values) {
            addCriterion("REMARK IN", values, "remark");
            return this;
        }

        public Criteria andRemarkIn(List<String> values) {
            addCriterion("REMARK IN", values, "remark");
            return this;
        }

        public Criteria andRemarkNotIn(String[] values) {
            addCriterion("REMARK NOT IN", values, "remark");
            return this;
        }

        public Criteria andRemarkNotIn(List<String> values) {
            addCriterion("REMARK NOT IN", values, "remark");
            return this;
        }

        public Criteria andRemarkBetween(String value1, String value2) {
            addCriterion("REMARK BETWEEN", value1, value2, "remark");
            return this;
        }

        public Criteria andRemarkNotBetween(String value1, String value2) {
            addCriterion("REMARK NOT BETWEEN", value1, value2, "remark");
            return this;
        }

        public Criteria andOperateAppIdIsNull() {
            addCriterion("OPERATE_APP_ID IS NULL");
            return this;
        }

        public Criteria andOperateAppIdIsNotNull() {
            addCriterion("OPERATE_APP_ID IS NOT NULL");
            return this;
        }

        public Criteria andOperateAppIdEqualTo(Long value) {
            addCriterion("OPERATE_APP_ID =", value, "operateAppId");
            return this;
        }

        public Criteria andOperateAppIdNotEqualTo(Long value) {
            addCriterion("OPERATE_APP_ID <>", value, "operateAppId");
            return this;
        }

        public Criteria andOperateAppIdGreaterThan(Long value) {
            addCriterion("OPERATE_APP_ID >", value, "operateAppId");
            return this;
        }

        public Criteria andOperateAppIdGreaterThanOrEqualTo(Long value) {
            addCriterion("OPERATE_APP_ID >=", value, "operateAppId");
            return this;
        }

        public Criteria andOperateAppIdLessThan(Long value) {
            addCriterion("OPERATE_APP_ID <", value, "operateAppId");
            return this;
        }

        public Criteria andOperateAppIdLessThanOrEqualTo(Long value) {
            addCriterion("OPERATE_APP_ID <=", value, "operateAppId");
            return this;
        }

        public Criteria andOperateAppIdIn(Long[] values) {
            addCriterion("OPERATE_APP_ID IN", values, "operateAppId");
            return this;
        }

        public Criteria andOperateAppIdIn(List<Long> values) {
            addCriterion("OPERATE_APP_ID IN", values, "operateAppId");
            return this;
        }

        public Criteria andOperateAppIdNotIn(Long[] values) {
            addCriterion("OPERATE_APP_ID NOT IN", values, "operateAppId");
            return this;
        }

        public Criteria andOperateAppIdNotIn(List<Long> values) {
            addCriterion("OPERATE_APP_ID NOT IN", values, "operateAppId");
            return this;
        }

        public Criteria andOperateAppIdBetween(Long value1, Long value2) {
            addCriterion("OPERATE_APP_ID BETWEEN", value1, value2, "operateAppId");
            return this;
        }

        public Criteria andOperateAppIdNotBetween(Long value1, Long value2) {
            addCriterion("OPERATE_APP_ID NOT BETWEEN", value1, value2, "operateAppId");
            return this;
        }

        public Criteria andOperatorIsNull() {
            addCriterion("OPERATOR IS NULL");
            return this;
        }

        public Criteria andOperatorIsNotNull() {
            addCriterion("OPERATOR IS NOT NULL");
            return this;
        }

        public Criteria andOperatorEqualTo(Long value) {
            addCriterion("OPERATOR =", value, "operator");
            return this;
        }

        public Criteria andOperatorNotEqualTo(Long value) {
            addCriterion("OPERATOR <>", value, "operator");
            return this;
        }

        public Criteria andOperatorGreaterThan(Long value) {
            addCriterion("OPERATOR >", value, "operator");
            return this;
        }

        public Criteria andOperatorGreaterThanOrEqualTo(Long value) {
            addCriterion("OPERATOR >=", value, "operator");
            return this;
        }

        public Criteria andOperatorLessThan(Long value) {
            addCriterion("OPERATOR <", value, "operator");
            return this;
        }

        public Criteria andOperatorLessThanOrEqualTo(Long value) {
            addCriterion("OPERATOR <=", value, "operator");
            return this;
        }

        public Criteria andOperatorIn(Long[] values) {
            addCriterion("OPERATOR IN", values, "operator");
            return this;
        }

        public Criteria andOperatorIn(List<Long> values) {
            addCriterion("OPERATOR IN", values, "operator");
            return this;
        }

        public Criteria andOperatorNotIn(Long[] values) {
            addCriterion("OPERATOR NOT IN", values, "operator");
            return this;
        }

        public Criteria andOperatorNotIn(List<Long> values) {
            addCriterion("OPERATOR NOT IN", values, "operator");
            return this;
        }

        public Criteria andOperatorBetween(Long value1, Long value2) {
            addCriterion("OPERATOR BETWEEN", value1, value2, "operator");
            return this;
        }

        public Criteria andOperatorNotBetween(Long value1, Long value2) {
            addCriterion("OPERATOR NOT BETWEEN", value1, value2, "operator");
            return this;
        }

        public Criteria andOperateTimeIsNull() {
            addCriterion("OPERATE_TIME IS NULL");
            return this;
        }

        public Criteria andOperateTimeIsNotNull() {
            addCriterion("OPERATE_TIME IS NOT NULL");
            return this;
        }

        public Criteria andOperateTimeEqualTo(Date value) {
            addCriterion("OPERATE_TIME =", value, "operateTime");
            return this;
        }

        public Criteria andOperateTimeNotEqualTo(Date value) {
            addCriterion("OPERATE_TIME <>", value, "operateTime");
            return this;
        }

        public Criteria andOperateTimeGreaterThan(Date value) {
            addCriterion("OPERATE_TIME >", value, "operateTime");
            return this;
        }

        public Criteria andOperateTimeGreaterThanOrEqualTo(Date value) {
            addCriterion("OPERATE_TIME >=", value, "operateTime");
            return this;
        }

        public Criteria andOperateTimeLessThan(Date value) {
            addCriterion("OPERATE_TIME <", value, "operateTime");
            return this;
        }

        public Criteria andOperateTimeLessThanOrEqualTo(Date value) {
            addCriterion("OPERATE_TIME <=", value, "operateTime");
            return this;
        }

        public Criteria andOperateTimeIn(Date[] values) {
            addCriterion("OPERATE_TIME IN", values, "operateTime");
            return this;
        }

        public Criteria andOperateTimeIn(List<Date> values) {
            addCriterion("OPERATE_TIME IN", values, "operateTime");
            return this;
        }

        public Criteria andOperateTimeNotIn(Date[] values) {
            addCriterion("OPERATE_TIME NOT IN", values, "operateTime");
            return this;
        }

        public Criteria andOperateTimeNotIn(List<Date> values) {
            addCriterion("OPERATE_TIME NOT IN", values, "operateTime");
            return this;
        }

        public Criteria andOperateTimeBetween(Date value1, Date value2) {
            addCriterion("OPERATE_TIME BETWEEN", value1, value2, "operateTime");
            return this;
        }

        public Criteria andOperateTimeNotBetween(Date value1, Date value2) {
            addCriterion("OPERATE_TIME NOT BETWEEN", value1, value2, "operateTime");
            return this;
        }
    }
}